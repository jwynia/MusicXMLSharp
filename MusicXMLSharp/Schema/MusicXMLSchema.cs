//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;
using MusicXMLSharp.Schema;

// 
// This source code was auto-generated by xsd, Version=4.0.30319.17929.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Transpose {
    
    private string diatonicField;
    
    private decimal chromaticField;
    
    private string octavechangeField;
    
    private Empty doubleField;
    
    private string numberField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string diatonic {
        get {
            return this.diatonicField;
        }
        set {
            this.diatonicField = value;
        }
    }
    
    /// <remarks/>
    public decimal chromatic {
        get {
            return this.chromaticField;
        }
        set {
            this.chromaticField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("octave-change", DataType="integer")]
    public string octavechange {
        get {
            return this.octavechangeField;
        }
        set {
            this.octavechangeField = value;
        }
    }
    
    /// <remarks/>
    public Empty @double {
        get {
            return this.doubleField;
        }
        set {
            this.doubleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="staff-tuning")]
public partial class stafftuning {
    
    private Step tuningstepField;
    
    private decimal tuningalterField;
    
    private bool tuningalterFieldSpecified;
    
    private string tuningoctaveField;
    
    private string lineField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuning-step")]
    public Step tuningstep {
        get {
            return this.tuningstepField;
        }
        set {
            this.tuningstepField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuning-alter")]
    public decimal tuningalter {
        get {
            return this.tuningalterField;
        }
        set {
            this.tuningalterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tuningalterSpecified {
        get {
            return this.tuningalterFieldSpecified;
        }
        set {
            this.tuningalterFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuning-octave", DataType="integer")]
    public string tuningoctave {
        get {
            return this.tuningoctaveField;
        }
        set {
            this.tuningoctaveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string line {
        get {
            return this.lineField;
        }
        set {
            this.lineField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="staff-details")]
public partial class staffdetails {
    
    private stafftype stafftypeField;
    
    private bool stafftypeFieldSpecified;
    
    private string stafflinesField;
    
    private stafftuning[] stafftuningField;
    
    private string capoField;
    
    private decimal staffsizeField;
    
    private bool staffsizeFieldSpecified;
    
    private string numberField;
    
    private showfrets showfretsField;
    
    private bool showfretsFieldSpecified;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    private YesNo printspacingField;
    
    private bool printspacingFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("staff-type")]
    public stafftype stafftype {
        get {
            return this.stafftypeField;
        }
        set {
            this.stafftypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool stafftypeSpecified {
        get {
            return this.stafftypeFieldSpecified;
        }
        set {
            this.stafftypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("staff-lines", DataType="nonNegativeInteger")]
    public string stafflines {
        get {
            return this.stafflinesField;
        }
        set {
            this.stafflinesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("staff-tuning")]
    public stafftuning[] stafftuning {
        get {
            return this.stafftuningField;
        }
        set {
            this.stafftuningField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
    public string capo {
        get {
            return this.capoField;
        }
        set {
            this.capoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("staff-size")]
    public decimal staffsize {
        get {
            return this.staffsizeField;
        }
        set {
            this.staffsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool staffsizeSpecified {
        get {
            return this.staffsizeFieldSpecified;
        }
        set {
            this.staffsizeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("show-frets")]
    public showfrets showfrets {
        get {
            return this.showfretsField;
        }
        set {
            this.showfretsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool showfretsSpecified {
        get {
            return this.showfretsFieldSpecified;
        }
        set {
            this.showfretsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-spacing")]
    public YesNo printspacing {
        get {
            return this.printspacingField;
        }
        set {
            this.printspacingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printspacingSpecified {
        get {
            return this.printspacingFieldSpecified;
        }
        set {
            this.printspacingFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="staff-type")]
public enum stafftype {
    
    /// <remarks/>
    ossia,
    
    /// <remarks/>
    cue,
    
    /// <remarks/>
    editorial,
    
    /// <remarks/>
    regular,
    
    /// <remarks/>
    alternate,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="show-frets")]
public enum showfrets {
    
    /// <remarks/>
    numbers,
    
    /// <remarks/>
    letters,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class clef {
    
    private clefsign signField;
    
    private string lineField;
    
    private string clefoctavechangeField;
    
    private string numberField;
    
    private YesNo additionalField;
    
    private bool additionalFieldSpecified;
    
    private SymbolSize sizeField;
    
    private bool sizeFieldSpecified;
    
    private YesNo afterbarlineField;
    
    private bool afterbarlineFieldSpecified;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    /// <remarks/>
    public clefsign sign {
        get {
            return this.signField;
        }
        set {
            this.signField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string line {
        get {
            return this.lineField;
        }
        set {
            this.lineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("clef-octave-change", DataType="integer")]
    public string clefoctavechange {
        get {
            return this.clefoctavechangeField;
        }
        set {
            this.clefoctavechangeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo additional {
        get {
            return this.additionalField;
        }
        set {
            this.additionalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool additionalSpecified {
        get {
            return this.additionalFieldSpecified;
        }
        set {
            this.additionalFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public SymbolSize size {
        get {
            return this.sizeField;
        }
        set {
            this.sizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sizeSpecified {
        get {
            return this.sizeFieldSpecified;
        }
        set {
            this.sizeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("after-barline")]
    public YesNo afterbarline {
        get {
            return this.afterbarlineField;
        }
        set {
            this.afterbarlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool afterbarlineSpecified {
        get {
            return this.afterbarlineFieldSpecified;
        }
        set {
            this.afterbarlineFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="clef-sign")]
public enum clefsign {
    
    /// <remarks/>
    G,
    
    /// <remarks/>
    F,
    
    /// <remarks/>
    C,
    
    /// <remarks/>
    percussion,
    
    /// <remarks/>
    TAB,
    
    /// <remarks/>
    jianpu,
    
    /// <remarks/>
    none,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="part-symbol")]
public partial class partsymbol {
    
    private string topstaffField;
    
    private string bottomstaffField;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private string colorField;
    
    private groupsymbolvalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("top-staff", DataType="positiveInteger")]
    public string topstaff {
        get {
            return this.topstaffField;
        }
        set {
            this.topstaffField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bottom-staff", DataType="positiveInteger")]
    public string bottomstaff {
        get {
            return this.bottomstaffField;
        }
        set {
            this.bottomstaffField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public groupsymbolvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="group-symbol-value")]
public enum groupsymbolvalue {
    
    /// <remarks/>
    none,
    
    /// <remarks/>
    brace,
    
    /// <remarks/>
    line,
    
    /// <remarks/>
    bracket,
    
    /// <remarks/>
    square,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class interchangeable {
    
    private timerelation timerelationField;
    
    private bool timerelationFieldSpecified;
    
    private string[] beatsField;
    
    private string[] beattypeField;
    
    private timesymbol symbolField;
    
    private bool symbolFieldSpecified;
    
    private timeseparator separatorField;
    
    private bool separatorFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("time-relation")]
    public timerelation timerelation {
        get {
            return this.timerelationField;
        }
        set {
            this.timerelationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool timerelationSpecified {
        get {
            return this.timerelationFieldSpecified;
        }
        set {
            this.timerelationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("beats")]
    public string[] beats {
        get {
            return this.beatsField;
        }
        set {
            this.beatsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("beat-type")]
    public string[] beattype {
        get {
            return this.beattypeField;
        }
        set {
            this.beattypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public timesymbol symbol {
        get {
            return this.symbolField;
        }
        set {
            this.symbolField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool symbolSpecified {
        get {
            return this.symbolFieldSpecified;
        }
        set {
            this.symbolFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public timeseparator separator {
        get {
            return this.separatorField;
        }
        set {
            this.separatorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool separatorSpecified {
        get {
            return this.separatorFieldSpecified;
        }
        set {
            this.separatorFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="time-relation")]
public enum timerelation {
    
    /// <remarks/>
    parentheses,
    
    /// <remarks/>
    bracket,
    
    /// <remarks/>
    equals,
    
    /// <remarks/>
    slash,
    
    /// <remarks/>
    space,
    
    /// <remarks/>
    hyphen,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="time-symbol")]
public enum timesymbol {
    
    /// <remarks/>
    common,
    
    /// <remarks/>
    cut,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("single-number")]
    singlenumber,
    
    /// <remarks/>
    note,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("dotted-note")]
    dottednote,
    
    /// <remarks/>
    normal,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="time-separator")]
public enum timeseparator {
    
    /// <remarks/>
    none,
    
    /// <remarks/>
    horizontal,
    
    /// <remarks/>
    diagonal,
    
    /// <remarks/>
    vertical,
    
    /// <remarks/>
    adjacent,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class time {
    
    private object[] itemsField;
    
    private ItemsChoiceType9[] itemsElementNameField;
    
    private string numberField;
    
    private timesymbol symbolField;
    
    private bool symbolFieldSpecified;
    
    private timeseparator separatorField;
    
    private bool separatorFieldSpecified;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("beat-type", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("beats", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("interchangeable", typeof(interchangeable))]
    [System.Xml.Serialization.XmlElementAttribute("senza-misura", typeof(string))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType9[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public timesymbol symbol {
        get {
            return this.symbolField;
        }
        set {
            this.symbolField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool symbolSpecified {
        get {
            return this.symbolFieldSpecified;
        }
        set {
            this.symbolFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public timeseparator separator {
        get {
            return this.separatorField;
        }
        set {
            this.separatorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool separatorSpecified {
        get {
            return this.separatorFieldSpecified;
        }
        set {
            this.separatorFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType9 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("beat-type")]
    beattype,
    
    /// <remarks/>
    beats,
    
    /// <remarks/>
    interchangeable,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("senza-misura")]
    senzamisura,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="key-octave")]
public partial class keyoctave {
    
    private string numberField;
    
    private YesNo cancelField;
    
    private bool cancelFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo cancel {
        get {
            return this.cancelField;
        }
        set {
            this.cancelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool cancelSpecified {
        get {
            return this.cancelFieldSpecified;
        }
        set {
            this.cancelFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="integer")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class cancel {
    
    private cancellocation locationField;
    
    private bool locationFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public cancellocation location {
        get {
            return this.locationField;
        }
        set {
            this.locationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool locationSpecified {
        get {
            return this.locationFieldSpecified;
        }
        set {
            this.locationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="integer")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="cancel-location")]
public enum cancellocation {
    
    /// <remarks/>
    left,
    
    /// <remarks/>
    right,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("before-barline")]
    beforebarline,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class key {
    
    private object[] itemsField;
    
    private ItemsChoiceType8[] itemsElementNameField;
    
    private keyoctave[] keyoctaveField;
    
    private string numberField;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("cancel", typeof(cancel))]
    [System.Xml.Serialization.XmlElementAttribute("fifths", typeof(string), DataType="integer")]
    [System.Xml.Serialization.XmlElementAttribute("key-accidental", typeof(AccidentalValue))]
    [System.Xml.Serialization.XmlElementAttribute("key-alter", typeof(decimal))]
    [System.Xml.Serialization.XmlElementAttribute("key-step", typeof(Step))]
    [System.Xml.Serialization.XmlElementAttribute("mode", typeof(string))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType8[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("key-octave")]
    public keyoctave[] keyoctave {
        get {
            return this.keyoctaveField;
        }
        set {
            this.keyoctaveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType8 {
    
    /// <remarks/>
    cancel,
    
    /// <remarks/>
    fifths,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("key-accidental")]
    keyaccidental,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("key-alter")]
    keyalter,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("key-step")]
    keystep,
    
    /// <remarks/>
    mode,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class attributes {
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    private decimal divisionsField;
    
    private bool divisionsFieldSpecified;
    
    private key[] keyField;
    
    private time[] timeField;
    
    private string stavesField;
    
    private partsymbol partsymbolField;
    
    private string instrumentsField;
    
    private clef[] clefField;
    
    private staffdetails[] staffdetailsField;
    
    private Transpose[] transposeField;
    
    private attributesDirective[] directiveField;
    
    private MeasureStyle[] _measureStyleField;
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    public decimal divisions {
        get {
            return this.divisionsField;
        }
        set {
            this.divisionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool divisionsSpecified {
        get {
            return this.divisionsFieldSpecified;
        }
        set {
            this.divisionsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("key")]
    public key[] key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("time")]
    public time[] time {
        get {
            return this.timeField;
        }
        set {
            this.timeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
    public string staves {
        get {
            return this.stavesField;
        }
        set {
            this.stavesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-symbol")]
    public partsymbol partsymbol {
        get {
            return this.partsymbolField;
        }
        set {
            this.partsymbolField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
    public string instruments {
        get {
            return this.instrumentsField;
        }
        set {
            this.instrumentsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("clef")]
    public clef[] clef {
        get {
            return this.clefField;
        }
        set {
            this.clefField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("staff-details")]
    public staffdetails[] staffdetails {
        get {
            return this.staffdetailsField;
        }
        set {
            this.staffdetailsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("transpose")]
    public Transpose[] transpose {
        get {
            return this.transposeField;
        }
        set {
            this.transposeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("directive")]
    public attributesDirective[] directive {
        get {
            return this.directiveField;
        }
        set {
            this.directiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("measure-style")]
    public MeasureStyle[] MeasureStyle {
        get {
            return this._measureStyleField;
        }
        set {
            this._measureStyleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class attributesDirective {
    
    private string langField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/XML/1998/namespace")]
    public string lang {
        get {
            return this.langField;
        }
        set {
            this.langField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class sound {
    
    private mididevice[] midideviceField;
    
    private midiinstrument[] midiinstrumentField;
    
    private play[] playField;
    
    private Offset offsetField;
    
    private decimal tempoField;
    
    private bool tempoFieldSpecified;
    
    private decimal dynamicsField;
    
    private bool dynamicsFieldSpecified;
    
    private YesNo dacapoField;
    
    private bool dacapoFieldSpecified;
    
    private string segnoField;
    
    private string dalsegnoField;
    
    private string codaField;
    
    private string tocodaField;
    
    private decimal divisionsField;
    
    private bool divisionsFieldSpecified;
    
    private YesNo forwardrepeatField;
    
    private bool forwardrepeatFieldSpecified;
    
    private string fineField;
    
    private string timeonlyField;
    
    private YesNo pizzicatoField;
    
    private bool pizzicatoFieldSpecified;
    
    private decimal panField;
    
    private bool panFieldSpecified;
    
    private decimal elevationField;
    
    private bool elevationFieldSpecified;
    
    private string damperpedalField;
    
    private string softpedalField;
    
    private string sostenutopedalField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-device")]
    public mididevice[] mididevice {
        get {
            return this.midideviceField;
        }
        set {
            this.midideviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-instrument")]
    public midiinstrument[] midiinstrument {
        get {
            return this.midiinstrumentField;
        }
        set {
            this.midiinstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("play")]
    public play[] play {
        get {
            return this.playField;
        }
        set {
            this.playField = value;
        }
    }
    
    /// <remarks/>
    public Offset offset {
        get {
            return this.offsetField;
        }
        set {
            this.offsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal tempo {
        get {
            return this.tempoField;
        }
        set {
            this.tempoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tempoSpecified {
        get {
            return this.tempoFieldSpecified;
        }
        set {
            this.tempoFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal dynamics {
        get {
            return this.dynamicsField;
        }
        set {
            this.dynamicsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dynamicsSpecified {
        get {
            return this.dynamicsFieldSpecified;
        }
        set {
            this.dynamicsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo dacapo {
        get {
            return this.dacapoField;
        }
        set {
            this.dacapoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dacapoSpecified {
        get {
            return this.dacapoFieldSpecified;
        }
        set {
            this.dacapoFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string segno {
        get {
            return this.segnoField;
        }
        set {
            this.segnoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string dalsegno {
        get {
            return this.dalsegnoField;
        }
        set {
            this.dalsegnoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string coda {
        get {
            return this.codaField;
        }
        set {
            this.codaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string tocoda {
        get {
            return this.tocodaField;
        }
        set {
            this.tocodaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal divisions {
        get {
            return this.divisionsField;
        }
        set {
            this.divisionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool divisionsSpecified {
        get {
            return this.divisionsFieldSpecified;
        }
        set {
            this.divisionsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("forward-repeat")]
    public YesNo forwardrepeat {
        get {
            return this.forwardrepeatField;
        }
        set {
            this.forwardrepeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool forwardrepeatSpecified {
        get {
            return this.forwardrepeatFieldSpecified;
        }
        set {
            this.forwardrepeatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string fine {
        get {
            return this.fineField;
        }
        set {
            this.fineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("time-only", DataType="token")]
    public string timeonly {
        get {
            return this.timeonlyField;
        }
        set {
            this.timeonlyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo pizzicato {
        get {
            return this.pizzicatoField;
        }
        set {
            this.pizzicatoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool pizzicatoSpecified {
        get {
            return this.pizzicatoFieldSpecified;
        }
        set {
            this.pizzicatoFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal pan {
        get {
            return this.panField;
        }
        set {
            this.panField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool panSpecified {
        get {
            return this.panFieldSpecified;
        }
        set {
            this.panFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal elevation {
        get {
            return this.elevationField;
        }
        set {
            this.elevationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool elevationSpecified {
        get {
            return this.elevationFieldSpecified;
        }
        set {
            this.elevationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("damper-pedal")]
    public string damperpedal {
        get {
            return this.damperpedalField;
        }
        set {
            this.damperpedalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("soft-pedal")]
    public string softpedal {
        get {
            return this.softpedalField;
        }
        set {
            this.softpedalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("sostenuto-pedal")]
    public string sostenutopedal {
        get {
            return this.sostenutopedalField;
        }
        set {
            this.sostenutopedalField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="midi-device")]
public partial class mididevice {
    
    private string portField;
    
    private string idField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string port {
        get {
            return this.portField;
        }
        set {
            this.portField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="midi-instrument")]
public partial class midiinstrument {
    
    private string midichannelField;
    
    private string midinameField;
    
    private string midibankField;
    
    private string midiprogramField;
    
    private string midiunpitchedField;
    
    private decimal volumeField;
    
    private bool volumeFieldSpecified;
    
    private decimal panField;
    
    private bool panFieldSpecified;
    
    private decimal elevationField;
    
    private bool elevationFieldSpecified;
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-channel", DataType="positiveInteger")]
    public string midichannel {
        get {
            return this.midichannelField;
        }
        set {
            this.midichannelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-name")]
    public string midiname {
        get {
            return this.midinameField;
        }
        set {
            this.midinameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-bank", DataType="positiveInteger")]
    public string midibank {
        get {
            return this.midibankField;
        }
        set {
            this.midibankField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-program", DataType="positiveInteger")]
    public string midiprogram {
        get {
            return this.midiprogramField;
        }
        set {
            this.midiprogramField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-unpitched", DataType="positiveInteger")]
    public string midiunpitched {
        get {
            return this.midiunpitchedField;
        }
        set {
            this.midiunpitchedField = value;
        }
    }
    
    /// <remarks/>
    public decimal volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool volumeSpecified {
        get {
            return this.volumeFieldSpecified;
        }
        set {
            this.volumeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public decimal pan {
        get {
            return this.panField;
        }
        set {
            this.panField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool panSpecified {
        get {
            return this.panFieldSpecified;
        }
        set {
            this.panFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public decimal elevation {
        get {
            return this.elevationField;
        }
        set {
            this.elevationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool elevationSpecified {
        get {
            return this.elevationFieldSpecified;
        }
        set {
            this.elevationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class play {
    
    private object[] itemsField;
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ipa", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("mute", typeof(mute))]
    [System.Xml.Serialization.XmlElementAttribute("other-play", typeof(otherplay))]
    [System.Xml.Serialization.XmlElementAttribute("semi-pitched", typeof(semipitched))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum mute {
    
    /// <remarks/>
    on,
    
    /// <remarks/>
    off,
    
    /// <remarks/>
    straight,
    
    /// <remarks/>
    cup,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("harmon-no-stem")]
    harmonnostem,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("harmon-stem")]
    harmonstem,
    
    /// <remarks/>
    bucket,
    
    /// <remarks/>
    plunger,
    
    /// <remarks/>
    hat,
    
    /// <remarks/>
    solotone,
    
    /// <remarks/>
    practice,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("stop-mute")]
    stopmute,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("stop-hand")]
    stophand,
    
    /// <remarks/>
    echo,
    
    /// <remarks/>
    palm,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="other-play")]
public partial class otherplay {
    
    private string typeField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="semi-pitched")]
public enum semipitched {
    
    /// <remarks/>
    high,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("medium-high")]
    mediumhigh,
    
    /// <remarks/>
    medium,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("medium-low")]
    mediumlow,
    
    /// <remarks/>
    low,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("very-low")]
    verylow,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="other-direction")]
public partial class otherdirection {
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class stick {
    
    private sticktype sticktypeField;
    
    private stickmaterial stickmaterialField;
    
    private tipdirection tipField;
    
    private bool tipFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("stick-type")]
    public sticktype sticktype {
        get {
            return this.sticktypeField;
        }
        set {
            this.sticktypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("stick-material")]
    public stickmaterial stickmaterial {
        get {
            return this.stickmaterialField;
        }
        set {
            this.stickmaterialField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public tipdirection tip {
        get {
            return this.tipField;
        }
        set {
            this.tipField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tipSpecified {
        get {
            return this.tipFieldSpecified;
        }
        set {
            this.tipFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="stick-type")]
public enum sticktype {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("bass drum")]
    bassdrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("double bass drum")]
    doublebassdrum,
    
    /// <remarks/>
    timpani,
    
    /// <remarks/>
    xylophone,
    
    /// <remarks/>
    yarn,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="stick-material")]
public enum stickmaterial {
    
    /// <remarks/>
    soft,
    
    /// <remarks/>
    medium,
    
    /// <remarks/>
    hard,
    
    /// <remarks/>
    shaded,
    
    /// <remarks/>
    x,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="tip-direction")]
public enum tipdirection {
    
    /// <remarks/>
    up,
    
    /// <remarks/>
    down,
    
    /// <remarks/>
    left,
    
    /// <remarks/>
    right,
    
    /// <remarks/>
    northwest,
    
    /// <remarks/>
    northeast,
    
    /// <remarks/>
    southeast,
    
    /// <remarks/>
    southwest,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class beater {
    
    private tipdirection tipField;
    
    private bool tipFieldSpecified;
    
    private beatervalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public tipdirection tip {
        get {
            return this.tipField;
        }
        set {
            this.tipField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tipSpecified {
        get {
            return this.tipFieldSpecified;
        }
        set {
            this.tipFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public beatervalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="beater-value")]
public enum beatervalue {
    
    /// <remarks/>
    bow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("chime hammer")]
    chimehammer,
    
    /// <remarks/>
    coin,
    
    /// <remarks/>
    finger,
    
    /// <remarks/>
    fingernail,
    
    /// <remarks/>
    fist,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("guiro scraper")]
    guiroscraper,
    
    /// <remarks/>
    hammer,
    
    /// <remarks/>
    hand,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("jazz stick")]
    jazzstick,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("knitting needle")]
    knittingneedle,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("metal hammer")]
    metalhammer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("snare stick")]
    snarestick,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("spoon mallet")]
    spoonmallet,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("triangle beater")]
    trianglebeater,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("triangle beater plain")]
    trianglebeaterplain,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("wire brush")]
    wirebrush,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class percussion {
    
    private object itemField;
    
    private enclosureshape enclosureField;
    
    private bool enclosureFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("beater", typeof(beater))]
    [System.Xml.Serialization.XmlElementAttribute("effect", typeof(effect))]
    [System.Xml.Serialization.XmlElementAttribute("glass", typeof(glass))]
    [System.Xml.Serialization.XmlElementAttribute("membrane", typeof(membrane))]
    [System.Xml.Serialization.XmlElementAttribute("metal", typeof(metal))]
    [System.Xml.Serialization.XmlElementAttribute("other-percussion", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("pitched", typeof(pitched))]
    [System.Xml.Serialization.XmlElementAttribute("stick", typeof(stick))]
    [System.Xml.Serialization.XmlElementAttribute("stick-location", typeof(sticklocation))]
    [System.Xml.Serialization.XmlElementAttribute("timpani", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("wood", typeof(wood))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public enclosureshape enclosure {
        get {
            return this.enclosureField;
        }
        set {
            this.enclosureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enclosureSpecified {
        get {
            return this.enclosureFieldSpecified;
        }
        set {
            this.enclosureFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum effect {
    
    /// <remarks/>
    anvil,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("auto horn")]
    autohorn,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("bird whistle")]
    birdwhistle,
    
    /// <remarks/>
    cannon,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("duck call")]
    duckcall,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("gun shot")]
    gunshot,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("klaxon horn")]
    klaxonhorn,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("lions roar")]
    lionsroar,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("police whistle")]
    policewhistle,
    
    /// <remarks/>
    siren,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("slide whistle")]
    slidewhistle,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("thunder sheet")]
    thundersheet,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("wind machine")]
    windmachine,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("wind whistle")]
    windwhistle,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum glass {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("wind chimes")]
    windchimes,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum membrane {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("bass drum")]
    bassdrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("bass drum on side")]
    bassdrumonside,
    
    /// <remarks/>
    bongos,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("conga drum")]
    congadrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("goblet drum")]
    gobletdrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("military drum")]
    militarydrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("snare drum")]
    snaredrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("snare drum snares off")]
    snaredrumsnaresoff,
    
    /// <remarks/>
    tambourine,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("tenor drum")]
    tenordrum,
    
    /// <remarks/>
    timbales,
    
    /// <remarks/>
    tomtom,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum metal {
    
    /// <remarks/>
    almglocken,
    
    /// <remarks/>
    bell,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("bell plate")]
    bellplate,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("brake drum")]
    brakedrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Chinese cymbal")]
    Chinesecymbal,
    
    /// <remarks/>
    cowbell,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("crash cymbals")]
    crashcymbals,
    
    /// <remarks/>
    crotale,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("cymbal tongs")]
    cymbaltongs,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("domed gong")]
    domedgong,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("finger cymbals")]
    fingercymbals,
    
    /// <remarks/>
    flexatone,
    
    /// <remarks/>
    gong,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("hi-hat")]
    hihat,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("high-hat cymbals")]
    highhatcymbals,
    
    /// <remarks/>
    handbell,
    
    /// <remarks/>
    sistrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("sizzle cymbal")]
    sizzlecymbal,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("sleigh bells")]
    sleighbells,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("suspended cymbal")]
    suspendedcymbal,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("tam tam")]
    tamtam,
    
    /// <remarks/>
    triangle,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Vietnamese hat")]
    Vietnamesehat,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum pitched {
    
    /// <remarks/>
    chimes,
    
    /// <remarks/>
    glockenspiel,
    
    /// <remarks/>
    mallet,
    
    /// <remarks/>
    marimba,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("tubular chimes")]
    tubularchimes,
    
    /// <remarks/>
    vibraphone,
    
    /// <remarks/>
    xylophone,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="stick-location")]
public enum sticklocation {
    
    /// <remarks/>
    center,
    
    /// <remarks/>
    rim,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("cymbal bell")]
    cymbalbell,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("cymbal edge")]
    cymbaledge,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum wood {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("board clapper")]
    boardclapper,
    
    /// <remarks/>
    cabasa,
    
    /// <remarks/>
    castanets,
    
    /// <remarks/>
    claves,
    
    /// <remarks/>
    guiro,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("log drum")]
    logdrum,
    
    /// <remarks/>
    maraca,
    
    /// <remarks/>
    maracas,
    
    /// <remarks/>
    ratchet,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("sandpaper blocks")]
    sandpaperblocks,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("slit drum")]
    slitdrum,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("temple block")]
    templeblock,
    
    /// <remarks/>
    vibraslap,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("wood block")]
    woodblock,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="enclosure-shape")]
public enum enclosureshape {
    
    /// <remarks/>
    rectangle,
    
    /// <remarks/>
    square,
    
    /// <remarks/>
    oval,
    
    /// <remarks/>
    circle,
    
    /// <remarks/>
    bracket,
    
    /// <remarks/>
    triangle,
    
    /// <remarks/>
    diamond,
    
    /// <remarks/>
    none,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="accordion-registration")]
public partial class accordionregistration {
    
    private Empty accordionhighField;
    
    private string accordionmiddleField;
    
    private Empty accordionlowField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accordion-high")]
    public Empty accordionhigh {
        get {
            return this.accordionhighField;
        }
        set {
            this.accordionhighField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accordion-middle", DataType="positiveInteger")]
    public string accordionmiddle {
        get {
            return this.accordionmiddleField;
        }
        set {
            this.accordionmiddleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accordion-low")]
    public Empty accordionlow {
        get {
            return this.accordionlowField;
        }
        set {
            this.accordionlowField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="principal-voice")]
public partial class principalvoice {
    
    private StartStop typeField;
    
    private principalvoicesymbol symbolField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public principalvoicesymbol symbol {
        get {
            return this.symbolField;
        }
        set {
            this.symbolField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="principal-voice-symbol")]
public enum principalvoicesymbol {
    
    /// <remarks/>
    Hauptstimme,
    
    /// <remarks/>
    Nebenstimme,
    
    /// <remarks/>
    plain,
    
    /// <remarks/>
    none,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class scordatura {
    
    private accord[] accordField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accord")]
    public accord[] accord {
        get {
            return this.accordField;
        }
        set {
            this.accordField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class accord {
    
    private Step tuningstepField;
    
    private decimal tuningalterField;
    
    private bool tuningalterFieldSpecified;
    
    private string tuningoctaveField;
    
    private string stringField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuning-step")]
    public Step tuningstep {
        get {
            return this.tuningstepField;
        }
        set {
            this.tuningstepField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuning-alter")]
    public decimal tuningalter {
        get {
            return this.tuningalterField;
        }
        set {
            this.tuningalterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tuningalterSpecified {
        get {
            return this.tuningalterFieldSpecified;
        }
        set {
            this.tuningalterFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuning-octave", DataType="integer")]
    public string tuningoctave {
        get {
            return this.tuningoctaveField;
        }
        set {
            this.tuningoctaveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string @string {
        get {
            return this.stringField;
        }
        set {
            this.stringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="string-mute")]
public partial class stringmute {
    
    private onoff typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public onoff type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="on-off")]
public enum onoff {
    
    /// <remarks/>
    on,
    
    /// <remarks/>
    off,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="pedal-tuning")]
public partial class pedaltuning {
    
    private Step pedalstepField;
    
    private decimal pedalalterField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("pedal-step")]
    public Step pedalstep {
        get {
            return this.pedalstepField;
        }
        set {
            this.pedalstepField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("pedal-alter")]
    public decimal pedalalter {
        get {
            return this.pedalalterField;
        }
        set {
            this.pedalalterField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="harp-pedals")]
public partial class harppedals {
    
    private pedaltuning[] pedaltuningField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("pedal-tuning")]
    public pedaltuning[] pedaltuning {
        get {
            return this.pedaltuningField;
        }
        set {
            this.pedaltuningField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="octave-shift")]
public partial class octaveshift {
    
    private updownstopcontinue typeField;
    
    private string numberField;
    
    private string sizeField;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    public octaveshift() {
        this.sizeField = "8";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public updownstopcontinue type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("8")]
    public string size {
        get {
            return this.sizeField;
        }
        set {
            this.sizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="up-down-stop-continue")]
public enum updownstopcontinue {
    
    /// <remarks/>
    up,
    
    /// <remarks/>
    down,
    
    /// <remarks/>
    stop,
    
    /// <remarks/>
    @continue,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="metronome-beam")]
public partial class metronomebeam {
    
    private string numberField;
    
    private beamvalue valueField;
    
    public metronomebeam() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public beamvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="beam-value")]
public enum beamvalue {
    
    /// <remarks/>
    begin,
    
    /// <remarks/>
    @continue,
    
    /// <remarks/>
    end,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("forward hook")]
    forwardhook,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("backward hook")]
    backwardhook,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="metronome-note")]
public partial class metronomenote {
    
    private NoteTypeValue metronometypeField;
    
    private Empty[] metronomedotField;
    
    private metronomebeam[] metronomebeamField;
    
    private metronometuplet metronometupletField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("metronome-type")]
    public NoteTypeValue metronometype {
        get {
            return this.metronometypeField;
        }
        set {
            this.metronometypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("metronome-dot")]
    public Empty[] metronomedot {
        get {
            return this.metronomedotField;
        }
        set {
            this.metronomedotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("metronome-beam")]
    public metronomebeam[] metronomebeam {
        get {
            return this.metronomebeamField;
        }
        set {
            this.metronomebeamField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("metronome-tuplet")]
    public metronometuplet metronometuplet {
        get {
            return this.metronometupletField;
        }
        set {
            this.metronometupletField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="metronome-tuplet")]
public partial class metronometuplet : timemodification {
    
    private StartStop typeField;
    
    private YesNo bracketField;
    
    private bool bracketFieldSpecified;
    
    private showtuplet shownumberField;
    
    private bool shownumberFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo bracket {
        get {
            return this.bracketField;
        }
        set {
            this.bracketField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bracketSpecified {
        get {
            return this.bracketFieldSpecified;
        }
        set {
            this.bracketFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("show-number")]
    public showtuplet shownumber {
        get {
            return this.shownumberField;
        }
        set {
            this.shownumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool shownumberSpecified {
        get {
            return this.shownumberFieldSpecified;
        }
        set {
            this.shownumberFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="show-tuplet")]
public enum showtuplet {
    
    /// <remarks/>
    actual,
    
    /// <remarks/>
    both,
    
    /// <remarks/>
    none,
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(metronometuplet))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="time-modification")]
public partial class timemodification {
    
    private string actualnotesField;
    
    private string normalnotesField;
    
    private NoteTypeValue normaltypeField;
    
    private Empty[] normaldotField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("actual-notes", DataType="nonNegativeInteger")]
    public string actualnotes {
        get {
            return this.actualnotesField;
        }
        set {
            this.actualnotesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("normal-notes", DataType="nonNegativeInteger")]
    public string normalnotes {
        get {
            return this.normalnotesField;
        }
        set {
            this.normalnotesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("normal-type")]
    public NoteTypeValue normaltype {
        get {
            return this.normaltypeField;
        }
        set {
            this.normaltypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("normal-dot")]
    public Empty[] normaldot {
        get {
            return this.normaldotField;
        }
        set {
            this.normaldotField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="per-minute")]
public partial class perminute {
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class metronome {
    
    private object[] itemsField;
    
    private LeftCenterRight justifyField;
    
    private bool justifyFieldSpecified;
    
    private YesNo parenthesesField;
    
    private bool parenthesesFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("beat-unit", typeof(NoteTypeValue))]
    [System.Xml.Serialization.XmlElementAttribute("beat-unit-dot", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("metronome-note", typeof(metronomenote))]
    [System.Xml.Serialization.XmlElementAttribute("metronome-relation", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("per-minute", typeof(perminute))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public LeftCenterRight justify {
        get {
            return this.justifyField;
        }
        set {
            this.justifyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool justifySpecified {
        get {
            return this.justifyFieldSpecified;
        }
        set {
            this.justifyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo parentheses {
        get {
            return this.parenthesesField;
        }
        set {
            this.parenthesesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool parenthesesSpecified {
        get {
            return this.parenthesesFieldSpecified;
        }
        set {
            this.parenthesesFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class pedal {
    
    private startstopchangecontinue typeField;
    
    private YesNo lineField;
    
    private bool lineFieldSpecified;
    
    private YesNo signField;
    
    private bool signFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public startstopchangecontinue type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo line {
        get {
            return this.lineField;
        }
        set {
            this.lineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool lineSpecified {
        get {
            return this.lineFieldSpecified;
        }
        set {
            this.lineFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo sign {
        get {
            return this.signField;
        }
        set {
            this.signField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool signSpecified {
        get {
            return this.signFieldSpecified;
        }
        set {
            this.signFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="start-stop-change-continue")]
public enum startstopchangecontinue {
    
    /// <remarks/>
    start,
    
    /// <remarks/>
    stop,
    
    /// <remarks/>
    change,
    
    /// <remarks/>
    @continue,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class bracket {
    
    private StartStopContinue typeField;
    
    private string numberField;
    
    private lineend lineendField;
    
    private decimal endlengthField;
    
    private bool endlengthFieldSpecified;
    
    private linetype linetypeField;
    
    private bool linetypeFieldSpecified;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private string colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStopContinue type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-end")]
    public lineend lineend {
        get {
            return this.lineendField;
        }
        set {
            this.lineendField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("end-length")]
    public decimal endlength {
        get {
            return this.endlengthField;
        }
        set {
            this.endlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool endlengthSpecified {
        get {
            return this.endlengthFieldSpecified;
        }
        set {
            this.endlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-type")]
    public linetype linetype {
        get {
            return this.linetypeField;
        }
        set {
            this.linetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool linetypeSpecified {
        get {
            return this.linetypeFieldSpecified;
        }
        set {
            this.linetypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="line-end")]
public enum lineend {
    
    /// <remarks/>
    up,
    
    /// <remarks/>
    down,
    
    /// <remarks/>
    both,
    
    /// <remarks/>
    arrow,
    
    /// <remarks/>
    none,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="line-type")]
public enum linetype {
    
    /// <remarks/>
    solid,
    
    /// <remarks/>
    dashed,
    
    /// <remarks/>
    dotted,
    
    /// <remarks/>
    wavy,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class dashes {
    
    private StartStopContinue typeField;
    
    private string numberField;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private string colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStopContinue type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class wedge {
    
    private wedgetype typeField;
    
    private string numberField;
    
    private decimal spreadField;
    
    private bool spreadFieldSpecified;
    
    private YesNo nienteField;
    
    private bool nienteFieldSpecified;
    
    private linetype linetypeField;
    
    private bool linetypeFieldSpecified;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private string colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public wedgetype type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal spread {
        get {
            return this.spreadField;
        }
        set {
            this.spreadField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spreadSpecified {
        get {
            return this.spreadFieldSpecified;
        }
        set {
            this.spreadFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo niente {
        get {
            return this.nienteField;
        }
        set {
            this.nienteField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool nienteSpecified {
        get {
            return this.nienteFieldSpecified;
        }
        set {
            this.nienteFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-type")]
    public linetype linetype {
        get {
            return this.linetypeField;
        }
        set {
            this.linetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool linetypeSpecified {
        get {
            return this.linetypeFieldSpecified;
        }
        set {
            this.linetypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="wedge-type")]
public enum wedgetype {
    
    /// <remarks/>
    crescendo,
    
    /// <remarks/>
    diminuendo,
    
    /// <remarks/>
    stop,
    
    /// <remarks/>
    @continue,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="direction-type")]
public partial class directiontype {
    
    private object[] itemsField;
    
    private ItemsChoiceType7[] itemsElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accordion-registration", typeof(accordionregistration))]
    [System.Xml.Serialization.XmlElementAttribute("bracket", typeof(bracket))]
    [System.Xml.Serialization.XmlElementAttribute("coda", typeof(EmptyPrintStyleAlign))]
    [System.Xml.Serialization.XmlElementAttribute("damp", typeof(EmptyPrintStyleAlign))]
    [System.Xml.Serialization.XmlElementAttribute("damp-all", typeof(EmptyPrintStyleAlign))]
    [System.Xml.Serialization.XmlElementAttribute("dashes", typeof(dashes))]
    [System.Xml.Serialization.XmlElementAttribute("dynamics", typeof(dynamics))]
    [System.Xml.Serialization.XmlElementAttribute("eyeglasses", typeof(EmptyPrintStyleAlign))]
    [System.Xml.Serialization.XmlElementAttribute("harp-pedals", typeof(harppedals))]
    [System.Xml.Serialization.XmlElementAttribute("image", typeof(image))]
    [System.Xml.Serialization.XmlElementAttribute("metronome", typeof(metronome))]
    [System.Xml.Serialization.XmlElementAttribute("octave-shift", typeof(octaveshift))]
    [System.Xml.Serialization.XmlElementAttribute("other-direction", typeof(otherdirection))]
    [System.Xml.Serialization.XmlElementAttribute("pedal", typeof(pedal))]
    [System.Xml.Serialization.XmlElementAttribute("percussion", typeof(percussion))]
    [System.Xml.Serialization.XmlElementAttribute("principal-voice", typeof(principalvoice))]
    [System.Xml.Serialization.XmlElementAttribute("rehearsal", typeof(FormattedText))]
    [System.Xml.Serialization.XmlElementAttribute("scordatura", typeof(scordatura))]
    [System.Xml.Serialization.XmlElementAttribute("segno", typeof(EmptyPrintStyleAlign))]
    [System.Xml.Serialization.XmlElementAttribute("string-mute", typeof(stringmute))]
    [System.Xml.Serialization.XmlElementAttribute("wedge", typeof(wedge))]
    [System.Xml.Serialization.XmlElementAttribute("words", typeof(FormattedText))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType7[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class dynamics {
    
    private object[] itemsField;
    
    private ItemsChoiceType5[] itemsElementNameField;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string underlineField;
    
    private string overlineField;
    
    private string linethroughField;
    
    private enclosureshape enclosureField;
    
    private bool enclosureFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("f", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("ff", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("fff", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("ffff", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("fffff", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("ffffff", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("fp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("fz", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("mf", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("mp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("other-dynamics", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("p", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("pp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("ppp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("pppp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("ppppp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("pppppp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("rf", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("rfz", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("sf", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("sffz", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("sfp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("sfpp", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("sfz", typeof(Empty))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType5[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string underline {
        get {
            return this.underlineField;
        }
        set {
            this.underlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string overline {
        get {
            return this.overlineField;
        }
        set {
            this.overlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-through", DataType="nonNegativeInteger")]
    public string linethrough {
        get {
            return this.linethroughField;
        }
        set {
            this.linethroughField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public enclosureshape enclosure {
        get {
            return this.enclosureField;
        }
        set {
            this.enclosureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enclosureSpecified {
        get {
            return this.enclosureFieldSpecified;
        }
        set {
            this.enclosureFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType5 {
    
    /// <remarks/>
    f,
    
    /// <remarks/>
    ff,
    
    /// <remarks/>
    fff,
    
    /// <remarks/>
    ffff,
    
    /// <remarks/>
    fffff,
    
    /// <remarks/>
    ffffff,
    
    /// <remarks/>
    fp,
    
    /// <remarks/>
    fz,
    
    /// <remarks/>
    mf,
    
    /// <remarks/>
    mp,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("other-dynamics")]
    otherdynamics,
    
    /// <remarks/>
    p,
    
    /// <remarks/>
    pp,
    
    /// <remarks/>
    ppp,
    
    /// <remarks/>
    pppp,
    
    /// <remarks/>
    ppppp,
    
    /// <remarks/>
    pppppp,
    
    /// <remarks/>
    rf,
    
    /// <remarks/>
    rfz,
    
    /// <remarks/>
    sf,
    
    /// <remarks/>
    sffz,
    
    /// <remarks/>
    sfp,
    
    /// <remarks/>
    sfpp,
    
    /// <remarks/>
    sfz,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class image {
    
    private string sourceField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public string source {
        get {
            return this.sourceField;
        }
        set {
            this.sourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType7 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("accordion-registration")]
    accordionregistration,
    
    /// <remarks/>
    bracket,
    
    /// <remarks/>
    coda,
    
    /// <remarks/>
    damp,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("damp-all")]
    dampall,
    
    /// <remarks/>
    dashes,
    
    /// <remarks/>
    dynamics,
    
    /// <remarks/>
    eyeglasses,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("harp-pedals")]
    harppedals,
    
    /// <remarks/>
    image,
    
    /// <remarks/>
    metronome,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("octave-shift")]
    octaveshift,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("other-direction")]
    otherdirection,
    
    /// <remarks/>
    pedal,
    
    /// <remarks/>
    percussion,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("principal-voice")]
    principalvoice,
    
    /// <remarks/>
    rehearsal,
    
    /// <remarks/>
    scordatura,
    
    /// <remarks/>
    segno,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("string-mute")]
    stringmute,
    
    /// <remarks/>
    wedge,
    
    /// <remarks/>
    words,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class direction {
    
    private directiontype[] directiontypeField;
    
    private Offset offsetField;
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    private string voiceField;
    
    private string staffField;
    
    private sound soundField;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private YesNo directiveField;
    
    private bool directiveFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("direction-type")]
    public directiontype[] directiontype {
        get {
            return this.directiontypeField;
        }
        set {
            this.directiontypeField = value;
        }
    }
    
    /// <remarks/>
    public Offset offset {
        get {
            return this.offsetField;
        }
        set {
            this.offsetField = value;
        }
    }
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    public string voice {
        get {
            return this.voiceField;
        }
        set {
            this.voiceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string staff {
        get {
            return this.staffField;
        }
        set {
            this.staffField = value;
        }
    }
    
    /// <remarks/>
    public sound sound {
        get {
            return this.soundField;
        }
        set {
            this.soundField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo directive {
        get {
            return this.directiveField;
        }
        set {
            this.directiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool directiveSpecified {
        get {
            return this.directiveFieldSpecified;
        }
        set {
            this.directiveFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class forward {
    
    private decimal durationField;
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    private string voiceField;
    
    private string staffField;
    
    /// <remarks/>
    public decimal duration {
        get {
            return this.durationField;
        }
        set {
            this.durationField = value;
        }
    }
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    public string voice {
        get {
            return this.voiceField;
        }
        set {
            this.voiceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string staff {
        get {
            return this.staffField;
        }
        set {
            this.staffField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class backup {
    
    private decimal durationField;
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    /// <remarks/>
    public decimal duration {
        get {
            return this.durationField;
        }
        set {
            this.durationField = value;
        }
    }
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="text-font-color")]
public partial class textfontcolor {
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string colorField;
    
    private string underlineField;
    
    private string overlineField;
    
    private string linethroughField;
    
    private decimal rotationField;
    
    private bool rotationFieldSpecified;
    
    private string letterspacingField;
    
    private string langField;
    
    private textdirection dirField;
    
    private bool dirFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string underline {
        get {
            return this.underlineField;
        }
        set {
            this.underlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string overline {
        get {
            return this.overlineField;
        }
        set {
            this.overlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-through", DataType="nonNegativeInteger")]
    public string linethrough {
        get {
            return this.linethroughField;
        }
        set {
            this.linethroughField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal rotation {
        get {
            return this.rotationField;
        }
        set {
            this.rotationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool rotationSpecified {
        get {
            return this.rotationFieldSpecified;
        }
        set {
            this.rotationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("letter-spacing")]
    public string letterspacing {
        get {
            return this.letterspacingField;
        }
        set {
            this.letterspacingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/XML/1998/namespace")]
    public string lang {
        get {
            return this.langField;
        }
        set {
            this.langField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public textdirection dir {
        get {
            return this.dirField;
        }
        set {
            this.dirField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dirSpecified {
        get {
            return this.dirFieldSpecified;
        }
        set {
            this.dirFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="text-direction")]
public enum textdirection {
    
    /// <remarks/>
    ltr,
    
    /// <remarks/>
    rtl,
    
    /// <remarks/>
    lro,
    
    /// <remarks/>
    rlo,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="text-element-data")]
public partial class textelementdata {
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string colorField;
    
    private string underlineField;
    
    private string overlineField;
    
    private string linethroughField;
    
    private decimal rotationField;
    
    private bool rotationFieldSpecified;
    
    private string letterspacingField;
    
    private string langField;
    
    private textdirection dirField;
    
    private bool dirFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string underline {
        get {
            return this.underlineField;
        }
        set {
            this.underlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string overline {
        get {
            return this.overlineField;
        }
        set {
            this.overlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-through", DataType="nonNegativeInteger")]
    public string linethrough {
        get {
            return this.linethroughField;
        }
        set {
            this.linethroughField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal rotation {
        get {
            return this.rotationField;
        }
        set {
            this.rotationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool rotationSpecified {
        get {
            return this.rotationFieldSpecified;
        }
        set {
            this.rotationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("letter-spacing")]
    public string letterspacing {
        get {
            return this.letterspacingField;
        }
        set {
            this.letterspacingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/XML/1998/namespace")]
    public string lang {
        get {
            return this.langField;
        }
        set {
            this.langField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public textdirection dir {
        get {
            return this.dirField;
        }
        set {
            this.dirField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dirSpecified {
        get {
            return this.dirFieldSpecified;
        }
        set {
            this.dirFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class lyric {
    
    private object[] itemsField;
    
    private ItemsChoiceType6[] itemsElementNameField;
    
    private Empty endlineField;
    
    private Empty endparagraphField;
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    private string numberField;
    
    private string nameField;
    
    private LeftCenterRight justifyField;
    
    private bool justifyFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string colorField;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("elision", typeof(textfontcolor))]
    [System.Xml.Serialization.XmlElementAttribute("extend", typeof(Extend))]
    [System.Xml.Serialization.XmlElementAttribute("humming", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("laughing", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("syllabic", typeof(syllabic))]
    [System.Xml.Serialization.XmlElementAttribute("text", typeof(textelementdata))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType6[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("end-line")]
    public Empty endline {
        get {
            return this.endlineField;
        }
        set {
            this.endlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("end-paragraph")]
    public Empty endparagraph {
        get {
            return this.endparagraphField;
        }
        set {
            this.endparagraphField = value;
        }
    }
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public LeftCenterRight justify {
        get {
            return this.justifyField;
        }
        set {
            this.justifyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool justifySpecified {
        get {
            return this.justifyFieldSpecified;
        }
        set {
            this.justifyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum syllabic {
    
    /// <remarks/>
    single,
    
    /// <remarks/>
    begin,
    
    /// <remarks/>
    end,
    
    /// <remarks/>
    middle,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType6 {
    
    /// <remarks/>
    elision,
    
    /// <remarks/>
    extend,
    
    /// <remarks/>
    humming,
    
    /// <remarks/>
    laughing,
    
    /// <remarks/>
    syllabic,
    
    /// <remarks/>
    text,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="other-notation")]
public partial class othernotation {
    
    private StartStopSingle typeField;
    
    private string numberField;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string valueField;
    
    public othernotation() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStopSingle type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="non-arpeggiate")]
public partial class nonarpeggiate {
    
    private topbottom typeField;
    
    private string numberField;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public topbottom type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="top-bottom")]
public enum topbottom {
    
    /// <remarks/>
    top,
    
    /// <remarks/>
    bottom,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class arpeggiate {
    
    private string numberField;
    
    private updown directionField;
    
    private bool directionFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public updown direction {
        get {
            return this.directionField;
        }
        set {
            this.directionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool directionSpecified {
        get {
            return this.directionFieldSpecified;
        }
        set {
            this.directionFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="up-down")]
public enum updown {
    
    /// <remarks/>
    up,
    
    /// <remarks/>
    down,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class articulations {
    
    private object[] itemsField;
    
    private ItemsChoiceType4[] itemsElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accent", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("breath-mark", typeof(breathmark))]
    [System.Xml.Serialization.XmlElementAttribute("caesura", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("detached-legato", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("doit", typeof(emptyline))]
    [System.Xml.Serialization.XmlElementAttribute("falloff", typeof(emptyline))]
    [System.Xml.Serialization.XmlElementAttribute("other-articulation", typeof(placementtext))]
    [System.Xml.Serialization.XmlElementAttribute("plop", typeof(emptyline))]
    [System.Xml.Serialization.XmlElementAttribute("scoop", typeof(emptyline))]
    [System.Xml.Serialization.XmlElementAttribute("spiccato", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("staccatissimo", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("staccato", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("stress", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("strong-accent", typeof(strongaccent))]
    [System.Xml.Serialization.XmlElementAttribute("tenuto", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("unstress", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType4[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(strongaccent))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(heeltoe))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="empty-placement")]
public partial class emptyplacement {
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="strong-accent")]
public partial class strongaccent : emptyplacement {
    
    private updown typeField;
    
    public strongaccent() {
        this.typeField = updown.up;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(updown.up)]
    public updown type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="heel-toe")]
public partial class heeltoe : emptyplacement {
    
    private YesNo substitutionField;
    
    private bool substitutionFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo substitution {
        get {
            return this.substitutionField;
        }
        set {
            this.substitutionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool substitutionSpecified {
        get {
            return this.substitutionFieldSpecified;
        }
        set {
            this.substitutionFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="breath-mark")]
public partial class breathmark {
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private breathmarkvalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public breathmarkvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="breath-mark-value")]
public enum breathmarkvalue {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("")]
    Item,
    
    /// <remarks/>
    comma,
    
    /// <remarks/>
    tick,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="empty-line")]
public partial class emptyline {
    
    private lineshape lineshapeField;
    
    private bool lineshapeFieldSpecified;
    
    private linetype linetypeField;
    
    private bool linetypeFieldSpecified;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-shape")]
    public lineshape lineshape {
        get {
            return this.lineshapeField;
        }
        set {
            this.lineshapeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool lineshapeSpecified {
        get {
            return this.lineshapeFieldSpecified;
        }
        set {
            this.lineshapeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-type")]
    public linetype linetype {
        get {
            return this.linetypeField;
        }
        set {
            this.linetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool linetypeSpecified {
        get {
            return this.linetypeFieldSpecified;
        }
        set {
            this.linetypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="line-shape")]
public enum lineshape {
    
    /// <remarks/>
    straight,
    
    /// <remarks/>
    curved,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="placement-text")]
public partial class placementtext {
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType4 {
    
    /// <remarks/>
    accent,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("breath-mark")]
    breathmark,
    
    /// <remarks/>
    caesura,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("detached-legato")]
    detachedlegato,
    
    /// <remarks/>
    doit,
    
    /// <remarks/>
    falloff,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("other-articulation")]
    otherarticulation,
    
    /// <remarks/>
    plop,
    
    /// <remarks/>
    scoop,
    
    /// <remarks/>
    spiccato,
    
    /// <remarks/>
    staccatissimo,
    
    /// <remarks/>
    staccato,
    
    /// <remarks/>
    stress,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("strong-accent")]
    strongaccent,
    
    /// <remarks/>
    tenuto,
    
    /// <remarks/>
    unstress,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class technical {
    
    private object[] itemsField;
    
    private ItemsChoiceType3[] itemsElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("arrow", typeof(arrow))]
    [System.Xml.Serialization.XmlElementAttribute("bend", typeof(bend))]
    [System.Xml.Serialization.XmlElementAttribute("double-tongue", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("down-bow", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("fingering", typeof(Fingering))]
    [System.Xml.Serialization.XmlElementAttribute("fingernails", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("fret", typeof(Fret))]
    [System.Xml.Serialization.XmlElementAttribute("hammer-on", typeof(hammeronpulloff))]
    [System.Xml.Serialization.XmlElementAttribute("handbell", typeof(handbell))]
    [System.Xml.Serialization.XmlElementAttribute("harmonic", typeof(harmonic))]
    [System.Xml.Serialization.XmlElementAttribute("heel", typeof(heeltoe))]
    [System.Xml.Serialization.XmlElementAttribute("hole", typeof(hole))]
    [System.Xml.Serialization.XmlElementAttribute("open-string", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("other-technical", typeof(placementtext))]
    [System.Xml.Serialization.XmlElementAttribute("pluck", typeof(placementtext))]
    [System.Xml.Serialization.XmlElementAttribute("pull-off", typeof(hammeronpulloff))]
    [System.Xml.Serialization.XmlElementAttribute("snap-pizzicato", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("stopped", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("string", typeof(@string))]
    [System.Xml.Serialization.XmlElementAttribute("tap", typeof(placementtext))]
    [System.Xml.Serialization.XmlElementAttribute("thumb-position", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("toe", typeof(heeltoe))]
    [System.Xml.Serialization.XmlElementAttribute("triple-tongue", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("up-bow", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType3[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class arrow {
    
    private object[] itemsField;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("arrow-direction", typeof(arrowdirection))]
    [System.Xml.Serialization.XmlElementAttribute("arrow-style", typeof(arrowstyle))]
    [System.Xml.Serialization.XmlElementAttribute("circular-arrow", typeof(circulararrow))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="arrow-direction")]
public enum arrowdirection {
    
    /// <remarks/>
    left,
    
    /// <remarks/>
    up,
    
    /// <remarks/>
    right,
    
    /// <remarks/>
    down,
    
    /// <remarks/>
    northwest,
    
    /// <remarks/>
    northeast,
    
    /// <remarks/>
    southeast,
    
    /// <remarks/>
    southwest,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("left right")]
    leftright,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("up down")]
    updown,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("northwest southeast")]
    northwestsoutheast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("northeast southwest")]
    northeastsouthwest,
    
    /// <remarks/>
    other,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="arrow-style")]
public enum arrowstyle {
    
    /// <remarks/>
    single,
    
    /// <remarks/>
    @double,
    
    /// <remarks/>
    filled,
    
    /// <remarks/>
    hollow,
    
    /// <remarks/>
    paired,
    
    /// <remarks/>
    combined,
    
    /// <remarks/>
    other,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="circular-arrow")]
public enum circulararrow {
    
    /// <remarks/>
    clockwise,
    
    /// <remarks/>
    anticlockwise,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class bend {
    
    private decimal bendalterField;
    
    private Empty itemField;
    
    private ItemChoiceType1 itemElementNameField;
    
    private placementtext withbarField;
    
    private YesNo accelerateField;
    
    private bool accelerateFieldSpecified;
    
    private decimal beatsField;
    
    private bool beatsFieldSpecified;
    
    private decimal firstbeatField;
    
    private bool firstbeatFieldSpecified;
    
    private decimal lastbeatField;
    
    private bool lastbeatFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("bend-alter")]
    public decimal bendalter {
        get {
            return this.bendalterField;
        }
        set {
            this.bendalterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("pre-bend", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("release", typeof(Empty))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public Empty Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType1 ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("with-bar")]
    public placementtext withbar {
        get {
            return this.withbarField;
        }
        set {
            this.withbarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo accelerate {
        get {
            return this.accelerateField;
        }
        set {
            this.accelerateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool accelerateSpecified {
        get {
            return this.accelerateFieldSpecified;
        }
        set {
            this.accelerateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal beats {
        get {
            return this.beatsField;
        }
        set {
            this.beatsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool beatsSpecified {
        get {
            return this.beatsFieldSpecified;
        }
        set {
            this.beatsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("first-beat")]
    public decimal firstbeat {
        get {
            return this.firstbeatField;
        }
        set {
            this.firstbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool firstbeatSpecified {
        get {
            return this.firstbeatFieldSpecified;
        }
        set {
            this.firstbeatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("last-beat")]
    public decimal lastbeat {
        get {
            return this.lastbeatField;
        }
        set {
            this.lastbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool lastbeatSpecified {
        get {
            return this.lastbeatFieldSpecified;
        }
        set {
            this.lastbeatFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemChoiceType1 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("pre-bend")]
    prebend,
    
    /// <remarks/>
    release,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="hammer-on-pull-off")]
public partial class hammeronpulloff {
    
    private StartStop typeField;
    
    private string numberField;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string valueField;
    
    public hammeronpulloff() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class handbell {
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private handbellvalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public handbellvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="handbell-value")]
public enum handbellvalue {
    
    /// <remarks/>
    damp,
    
    /// <remarks/>
    echo,
    
    /// <remarks/>
    gyro,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("hand martellato")]
    handmartellato,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("mallet lift")]
    malletlift,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("mallet table")]
    mallettable,
    
    /// <remarks/>
    martellato,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("martellato lift")]
    martellatolift,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("muted martellato")]
    mutedmartellato,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("pluck lift")]
    plucklift,
    
    /// <remarks/>
    swing,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class harmonic {
    
    private Empty itemField;
    
    private ItemChoiceType itemElementNameField;
    
    private Empty item1Field;
    
    private Item1ChoiceType item1ElementNameField;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("artificial", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("natural", typeof(Empty))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public Empty Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("base-pitch", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("sounding-pitch", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("touching-pitch", typeof(Empty))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public Empty Item1 {
        get {
            return this.item1Field;
        }
        set {
            this.item1Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType Item1ElementName {
        get {
            return this.item1ElementNameField;
        }
        set {
            this.item1ElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemChoiceType {
    
    /// <remarks/>
    artificial,
    
    /// <remarks/>
    natural,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum Item1ChoiceType {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("base-pitch")]
    basepitch,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("sounding-pitch")]
    soundingpitch,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("touching-pitch")]
    touchingpitch,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class hole {
    
    private string holetypeField;
    
    private holeclosed holeclosedField;
    
    private string holeshapeField;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("hole-type")]
    public string holetype {
        get {
            return this.holetypeField;
        }
        set {
            this.holetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("hole-closed")]
    public holeclosed holeclosed {
        get {
            return this.holeclosedField;
        }
        set {
            this.holeclosedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("hole-shape")]
    public string holeshape {
        get {
            return this.holeshapeField;
        }
        set {
            this.holeshapeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="hole-closed")]
public partial class holeclosed {
    
    private holeclosedlocation locationField;
    
    private bool locationFieldSpecified;
    
    private holeclosedvalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public holeclosedlocation location {
        get {
            return this.locationField;
        }
        set {
            this.locationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool locationSpecified {
        get {
            return this.locationFieldSpecified;
        }
        set {
            this.locationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public holeclosedvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="hole-closed-location")]
public enum holeclosedlocation {
    
    /// <remarks/>
    right,
    
    /// <remarks/>
    bottom,
    
    /// <remarks/>
    left,
    
    /// <remarks/>
    top,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="hole-closed-value")]
public enum holeclosedvalue {
    
    /// <remarks/>
    yes,
    
    /// <remarks/>
    no,
    
    /// <remarks/>
    half,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType3 {
    
    /// <remarks/>
    arrow,
    
    /// <remarks/>
    bend,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("double-tongue")]
    doubletongue,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("down-bow")]
    downbow,
    
    /// <remarks/>
    fingering,
    
    /// <remarks/>
    fingernails,
    
    /// <remarks/>
    fret,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("hammer-on")]
    hammeron,
    
    /// <remarks/>
    handbell,
    
    /// <remarks/>
    harmonic,
    
    /// <remarks/>
    heel,
    
    /// <remarks/>
    hole,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("open-string")]
    openstring,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("other-technical")]
    othertechnical,
    
    /// <remarks/>
    pluck,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("pull-off")]
    pulloff,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("snap-pizzicato")]
    snappizzicato,
    
    /// <remarks/>
    stopped,
    
    /// <remarks/>
    @string,
    
    /// <remarks/>
    tap,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("thumb-position")]
    thumbposition,
    
    /// <remarks/>
    toe,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("triple-tongue")]
    tripletongue,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("up-bow")]
    upbow,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="accidental-mark")]
public partial class accidentalmark {
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private AccidentalValue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public AccidentalValue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class tremolo {
    
    private StartStopSingle typeField;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private string valueField;
    
    public tremolo() {
        this.typeField = StartStopSingle.single;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(StartStopSingle.single)]
    public StartStopSingle type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="integer")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="horizontal-turn")]
public partial class horizontalturn {
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private StartNote _startNoteField;
    
    private bool startnoteFieldSpecified;
    
    private TrillStep _trillStepField;
    
    private bool trillstepFieldSpecified;
    
    private TwoNoteTurn _twoNoteTurnField;
    
    private bool twonoteturnFieldSpecified;
    
    private YesNo accelerateField;
    
    private bool accelerateFieldSpecified;
    
    private decimal beatsField;
    
    private bool beatsFieldSpecified;
    
    private decimal secondbeatField;
    
    private bool secondbeatFieldSpecified;
    
    private decimal lastbeatField;
    
    private bool lastbeatFieldSpecified;
    
    private YesNo slashField;
    
    private bool slashFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("start-note")]
    public StartNote StartNote {
        get {
            return this._startNoteField;
        }
        set {
            this._startNoteField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool startnoteSpecified {
        get {
            return this.startnoteFieldSpecified;
        }
        set {
            this.startnoteFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("trill-step")]
    public TrillStep TrillStep {
        get {
            return this._trillStepField;
        }
        set {
            this._trillStepField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trillstepSpecified {
        get {
            return this.trillstepFieldSpecified;
        }
        set {
            this.trillstepFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("two-note-turn")]
    public TwoNoteTurn TwoNoteTurn {
        get {
            return this._twoNoteTurnField;
        }
        set {
            this._twoNoteTurnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool twonoteturnSpecified {
        get {
            return this.twonoteturnFieldSpecified;
        }
        set {
            this.twonoteturnFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo accelerate {
        get {
            return this.accelerateField;
        }
        set {
            this.accelerateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool accelerateSpecified {
        get {
            return this.accelerateFieldSpecified;
        }
        set {
            this.accelerateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal beats {
        get {
            return this.beatsField;
        }
        set {
            this.beatsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool beatsSpecified {
        get {
            return this.beatsFieldSpecified;
        }
        set {
            this.beatsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("second-beat")]
    public decimal secondbeat {
        get {
            return this.secondbeatField;
        }
        set {
            this.secondbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool secondbeatSpecified {
        get {
            return this.secondbeatFieldSpecified;
        }
        set {
            this.secondbeatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("last-beat")]
    public decimal lastbeat {
        get {
            return this.lastbeatField;
        }
        set {
            this.lastbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool lastbeatSpecified {
        get {
            return this.lastbeatFieldSpecified;
        }
        set {
            this.lastbeatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo slash {
        get {
            return this.slashField;
        }
        set {
            this.slashField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool slashSpecified {
        get {
            return this.slashFieldSpecified;
        }
        set {
            this.slashFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(mordent))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="empty-trill-sound")]
public partial class emptytrillsound {
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private StartNote _startNoteField;
    
    private bool startnoteFieldSpecified;
    
    private TrillStep _trillStepField;
    
    private bool trillstepFieldSpecified;
    
    private TwoNoteTurn _twoNoteTurnField;
    
    private bool twonoteturnFieldSpecified;
    
    private YesNo accelerateField;
    
    private bool accelerateFieldSpecified;
    
    private decimal beatsField;
    
    private bool beatsFieldSpecified;
    
    private decimal secondbeatField;
    
    private bool secondbeatFieldSpecified;
    
    private decimal lastbeatField;
    
    private bool lastbeatFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("start-note")]
    public StartNote StartNote {
        get {
            return this._startNoteField;
        }
        set {
            this._startNoteField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool startnoteSpecified {
        get {
            return this.startnoteFieldSpecified;
        }
        set {
            this.startnoteFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("trill-step")]
    public TrillStep TrillStep {
        get {
            return this._trillStepField;
        }
        set {
            this._trillStepField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trillstepSpecified {
        get {
            return this.trillstepFieldSpecified;
        }
        set {
            this.trillstepFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("two-note-turn")]
    public TwoNoteTurn TwoNoteTurn {
        get {
            return this._twoNoteTurnField;
        }
        set {
            this._twoNoteTurnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool twonoteturnSpecified {
        get {
            return this.twonoteturnFieldSpecified;
        }
        set {
            this.twonoteturnFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo accelerate {
        get {
            return this.accelerateField;
        }
        set {
            this.accelerateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool accelerateSpecified {
        get {
            return this.accelerateFieldSpecified;
        }
        set {
            this.accelerateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal beats {
        get {
            return this.beatsField;
        }
        set {
            this.beatsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool beatsSpecified {
        get {
            return this.beatsFieldSpecified;
        }
        set {
            this.beatsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("second-beat")]
    public decimal secondbeat {
        get {
            return this.secondbeatField;
        }
        set {
            this.secondbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool secondbeatSpecified {
        get {
            return this.secondbeatFieldSpecified;
        }
        set {
            this.secondbeatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("last-beat")]
    public decimal lastbeat {
        get {
            return this.lastbeatField;
        }
        set {
            this.lastbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool lastbeatSpecified {
        get {
            return this.lastbeatFieldSpecified;
        }
        set {
            this.lastbeatFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mordent : emptytrillsound {
    
    private YesNo longField;
    
    private bool longFieldSpecified;
    
    private AboveBelow approachField;
    
    private bool approachFieldSpecified;
    
    private AboveBelow departureField;
    
    private bool departureFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo @long {
        get {
            return this.longField;
        }
        set {
            this.longField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool longSpecified {
        get {
            return this.longFieldSpecified;
        }
        set {
            this.longFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow approach {
        get {
            return this.approachField;
        }
        set {
            this.approachField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool approachSpecified {
        get {
            return this.approachFieldSpecified;
        }
        set {
            this.approachFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow departure {
        get {
            return this.departureField;
        }
        set {
            this.departureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool departureSpecified {
        get {
            return this.departureFieldSpecified;
        }
        set {
            this.departureFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ornaments {
    
    private object[] itemsField;
    
    private ItemsChoiceType2[] itemsElementNameField;
    
    private accidentalmark[] accidentalmarkField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("delayed-inverted-turn", typeof(horizontalturn))]
    [System.Xml.Serialization.XmlElementAttribute("delayed-turn", typeof(horizontalturn))]
    [System.Xml.Serialization.XmlElementAttribute("inverted-mordent", typeof(mordent))]
    [System.Xml.Serialization.XmlElementAttribute("inverted-turn", typeof(horizontalturn))]
    [System.Xml.Serialization.XmlElementAttribute("mordent", typeof(mordent))]
    [System.Xml.Serialization.XmlElementAttribute("other-ornament", typeof(placementtext))]
    [System.Xml.Serialization.XmlElementAttribute("schleifer", typeof(emptyplacement))]
    [System.Xml.Serialization.XmlElementAttribute("shake", typeof(emptytrillsound))]
    [System.Xml.Serialization.XmlElementAttribute("tremolo", typeof(tremolo))]
    [System.Xml.Serialization.XmlElementAttribute("trill-mark", typeof(emptytrillsound))]
    [System.Xml.Serialization.XmlElementAttribute("turn", typeof(horizontalturn))]
    [System.Xml.Serialization.XmlElementAttribute("vertical-turn", typeof(emptytrillsound))]
    [System.Xml.Serialization.XmlElementAttribute("wavy-line", typeof(WavyLine))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType2[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accidental-mark")]
    public accidentalmark[] accidentalmark {
        get {
            return this.accidentalmarkField;
        }
        set {
            this.accidentalmarkField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType2 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("delayed-inverted-turn")]
    delayedinvertedturn,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("delayed-turn")]
    delayedturn,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("inverted-mordent")]
    invertedmordent,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("inverted-turn")]
    invertedturn,
    
    /// <remarks/>
    mordent,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("other-ornament")]
    otherornament,
    
    /// <remarks/>
    schleifer,
    
    /// <remarks/>
    shake,
    
    /// <remarks/>
    tremolo,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("trill-mark")]
    trillmark,
    
    /// <remarks/>
    turn,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("vertical-turn")]
    verticalturn,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("wavy-line")]
    wavyline,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class slide {
    
    private StartStop typeField;
    
    private string numberField;
    
    private linetype linetypeField;
    
    private bool linetypeFieldSpecified;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private YesNo accelerateField;
    
    private bool accelerateFieldSpecified;
    
    private decimal beatsField;
    
    private bool beatsFieldSpecified;
    
    private decimal firstbeatField;
    
    private bool firstbeatFieldSpecified;
    
    private decimal lastbeatField;
    
    private bool lastbeatFieldSpecified;
    
    private string valueField;
    
    public slide() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-type")]
    public linetype linetype {
        get {
            return this.linetypeField;
        }
        set {
            this.linetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool linetypeSpecified {
        get {
            return this.linetypeFieldSpecified;
        }
        set {
            this.linetypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo accelerate {
        get {
            return this.accelerateField;
        }
        set {
            this.accelerateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool accelerateSpecified {
        get {
            return this.accelerateFieldSpecified;
        }
        set {
            this.accelerateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal beats {
        get {
            return this.beatsField;
        }
        set {
            this.beatsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool beatsSpecified {
        get {
            return this.beatsFieldSpecified;
        }
        set {
            this.beatsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("first-beat")]
    public decimal firstbeat {
        get {
            return this.firstbeatField;
        }
        set {
            this.firstbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool firstbeatSpecified {
        get {
            return this.firstbeatFieldSpecified;
        }
        set {
            this.firstbeatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("last-beat")]
    public decimal lastbeat {
        get {
            return this.lastbeatField;
        }
        set {
            this.lastbeatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool lastbeatSpecified {
        get {
            return this.lastbeatFieldSpecified;
        }
        set {
            this.lastbeatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class glissando {
    
    private StartStop typeField;
    
    private string numberField;
    
    private linetype linetypeField;
    
    private bool linetypeFieldSpecified;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private string valueField;
    
    public glissando() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-type")]
    public linetype linetype {
        get {
            return this.linetypeField;
        }
        set {
            this.linetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool linetypeSpecified {
        get {
            return this.linetypeFieldSpecified;
        }
        set {
            this.linetypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="tuplet-dot")]
public partial class tupletdot {
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="tuplet-type")]
public partial class tuplettype {
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string colorField;
    
    private NoteTypeValue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public NoteTypeValue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="tuplet-number")]
public partial class tupletnumber {
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string colorField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="tuplet-portion")]
public partial class tupletportion {
    
    private tupletnumber tupletnumberField;
    
    private tuplettype tuplettypeField;
    
    private tupletdot[] tupletdotField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuplet-number")]
    public tupletnumber tupletnumber {
        get {
            return this.tupletnumberField;
        }
        set {
            this.tupletnumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuplet-type")]
    public tuplettype tuplettype {
        get {
            return this.tuplettypeField;
        }
        set {
            this.tuplettypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuplet-dot")]
    public tupletdot[] tupletdot {
        get {
            return this.tupletdotField;
        }
        set {
            this.tupletdotField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class tuplet {
    
    private tupletportion tupletactualField;
    
    private tupletportion tupletnormalField;
    
    private StartStop typeField;
    
    private string numberField;
    
    private YesNo bracketField;
    
    private bool bracketFieldSpecified;
    
    private showtuplet shownumberField;
    
    private bool shownumberFieldSpecified;
    
    private showtuplet showtypeField;
    
    private bool showtypeFieldSpecified;
    
    private lineshape lineshapeField;
    
    private bool lineshapeFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuplet-actual")]
    public tupletportion tupletactual {
        get {
            return this.tupletactualField;
        }
        set {
            this.tupletactualField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tuplet-normal")]
    public tupletportion tupletnormal {
        get {
            return this.tupletnormalField;
        }
        set {
            this.tupletnormalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo bracket {
        get {
            return this.bracketField;
        }
        set {
            this.bracketField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bracketSpecified {
        get {
            return this.bracketFieldSpecified;
        }
        set {
            this.bracketFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("show-number")]
    public showtuplet shownumber {
        get {
            return this.shownumberField;
        }
        set {
            this.shownumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool shownumberSpecified {
        get {
            return this.shownumberFieldSpecified;
        }
        set {
            this.shownumberFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("show-type")]
    public showtuplet showtype {
        get {
            return this.showtypeField;
        }
        set {
            this.showtypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool showtypeSpecified {
        get {
            return this.showtypeFieldSpecified;
        }
        set {
            this.showtypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-shape")]
    public lineshape lineshape {
        get {
            return this.lineshapeField;
        }
        set {
            this.lineshapeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool lineshapeSpecified {
        get {
            return this.lineshapeFieldSpecified;
        }
        set {
            this.lineshapeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class slur {
    
    private StartStopContinue typeField;
    
    private string numberField;
    
    private linetype linetypeField;
    
    private bool linetypeFieldSpecified;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private overunder orientationField;
    
    private bool orientationFieldSpecified;
    
    private decimal bezieroffsetField;
    
    private bool bezieroffsetFieldSpecified;
    
    private decimal bezieroffset2Field;
    
    private bool bezieroffset2FieldSpecified;
    
    private decimal bezierxField;
    
    private bool bezierxFieldSpecified;
    
    private decimal bezieryField;
    
    private bool bezieryFieldSpecified;
    
    private decimal bezierx2Field;
    
    private bool bezierx2FieldSpecified;
    
    private decimal beziery2Field;
    
    private bool beziery2FieldSpecified;
    
    private string colorField;
    
    public slur() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStopContinue type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-type")]
    public linetype linetype {
        get {
            return this.linetypeField;
        }
        set {
            this.linetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool linetypeSpecified {
        get {
            return this.linetypeFieldSpecified;
        }
        set {
            this.linetypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public overunder orientation {
        get {
            return this.orientationField;
        }
        set {
            this.orientationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool orientationSpecified {
        get {
            return this.orientationFieldSpecified;
        }
        set {
            this.orientationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-offset")]
    public decimal bezieroffset {
        get {
            return this.bezieroffsetField;
        }
        set {
            this.bezieroffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezieroffsetSpecified {
        get {
            return this.bezieroffsetFieldSpecified;
        }
        set {
            this.bezieroffsetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-offset2")]
    public decimal bezieroffset2 {
        get {
            return this.bezieroffset2Field;
        }
        set {
            this.bezieroffset2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezieroffset2Specified {
        get {
            return this.bezieroffset2FieldSpecified;
        }
        set {
            this.bezieroffset2FieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-x")]
    public decimal bezierx {
        get {
            return this.bezierxField;
        }
        set {
            this.bezierxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezierxSpecified {
        get {
            return this.bezierxFieldSpecified;
        }
        set {
            this.bezierxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-y")]
    public decimal beziery {
        get {
            return this.bezieryField;
        }
        set {
            this.bezieryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezierySpecified {
        get {
            return this.bezieryFieldSpecified;
        }
        set {
            this.bezieryFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-x2")]
    public decimal bezierx2 {
        get {
            return this.bezierx2Field;
        }
        set {
            this.bezierx2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezierx2Specified {
        get {
            return this.bezierx2FieldSpecified;
        }
        set {
            this.bezierx2FieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-y2")]
    public decimal beziery2 {
        get {
            return this.beziery2Field;
        }
        set {
            this.beziery2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool beziery2Specified {
        get {
            return this.beziery2FieldSpecified;
        }
        set {
            this.beziery2FieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="over-under")]
public enum overunder {
    
    /// <remarks/>
    over,
    
    /// <remarks/>
    under,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class tied {
    
    private StartStopContinue typeField;
    
    private string numberField;
    
    private linetype linetypeField;
    
    private bool linetypeFieldSpecified;
    
    private decimal dashlengthField;
    
    private bool dashlengthFieldSpecified;
    
    private decimal spacelengthField;
    
    private bool spacelengthFieldSpecified;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private AboveBelow placementField;
    
    private bool placementFieldSpecified;
    
    private overunder orientationField;
    
    private bool orientationFieldSpecified;
    
    private decimal bezieroffsetField;
    
    private bool bezieroffsetFieldSpecified;
    
    private decimal bezieroffset2Field;
    
    private bool bezieroffset2FieldSpecified;
    
    private decimal bezierxField;
    
    private bool bezierxFieldSpecified;
    
    private decimal bezieryField;
    
    private bool bezieryFieldSpecified;
    
    private decimal bezierx2Field;
    
    private bool bezierx2FieldSpecified;
    
    private decimal beziery2Field;
    
    private bool beziery2FieldSpecified;
    
    private string colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStopContinue type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("line-type")]
    public linetype linetype {
        get {
            return this.linetypeField;
        }
        set {
            this.linetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool linetypeSpecified {
        get {
            return this.linetypeFieldSpecified;
        }
        set {
            this.linetypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("dash-length")]
    public decimal dashlength {
        get {
            return this.dashlengthField;
        }
        set {
            this.dashlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dashlengthSpecified {
        get {
            return this.dashlengthFieldSpecified;
        }
        set {
            this.dashlengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("space-length")]
    public decimal spacelength {
        get {
            return this.spacelengthField;
        }
        set {
            this.spacelengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool spacelengthSpecified {
        get {
            return this.spacelengthFieldSpecified;
        }
        set {
            this.spacelengthFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AboveBelow placement {
        get {
            return this.placementField;
        }
        set {
            this.placementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool placementSpecified {
        get {
            return this.placementFieldSpecified;
        }
        set {
            this.placementFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public overunder orientation {
        get {
            return this.orientationField;
        }
        set {
            this.orientationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool orientationSpecified {
        get {
            return this.orientationFieldSpecified;
        }
        set {
            this.orientationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-offset")]
    public decimal bezieroffset {
        get {
            return this.bezieroffsetField;
        }
        set {
            this.bezieroffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezieroffsetSpecified {
        get {
            return this.bezieroffsetFieldSpecified;
        }
        set {
            this.bezieroffsetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-offset2")]
    public decimal bezieroffset2 {
        get {
            return this.bezieroffset2Field;
        }
        set {
            this.bezieroffset2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezieroffset2Specified {
        get {
            return this.bezieroffset2FieldSpecified;
        }
        set {
            this.bezieroffset2FieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-x")]
    public decimal bezierx {
        get {
            return this.bezierxField;
        }
        set {
            this.bezierxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezierxSpecified {
        get {
            return this.bezierxFieldSpecified;
        }
        set {
            this.bezierxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-y")]
    public decimal beziery {
        get {
            return this.bezieryField;
        }
        set {
            this.bezieryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezierySpecified {
        get {
            return this.bezieryFieldSpecified;
        }
        set {
            this.bezieryFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-x2")]
    public decimal bezierx2 {
        get {
            return this.bezierx2Field;
        }
        set {
            this.bezierx2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bezierx2Specified {
        get {
            return this.bezierx2FieldSpecified;
        }
        set {
            this.bezierx2FieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("bezier-y2")]
    public decimal beziery2 {
        get {
            return this.beziery2Field;
        }
        set {
            this.beziery2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool beziery2Specified {
        get {
            return this.beziery2FieldSpecified;
        }
        set {
            this.beziery2FieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class notations {
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    private object[] itemsField;
    
    private YesNo printobjectField;
    
    private bool printobjectFieldSpecified;
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accidental-mark", typeof(accidentalmark))]
    [System.Xml.Serialization.XmlElementAttribute("arpeggiate", typeof(arpeggiate))]
    [System.Xml.Serialization.XmlElementAttribute("articulations", typeof(articulations))]
    [System.Xml.Serialization.XmlElementAttribute("dynamics", typeof(dynamics))]
    [System.Xml.Serialization.XmlElementAttribute("fermata", typeof(Fermata))]
    [System.Xml.Serialization.XmlElementAttribute("glissando", typeof(glissando))]
    [System.Xml.Serialization.XmlElementAttribute("non-arpeggiate", typeof(nonarpeggiate))]
    [System.Xml.Serialization.XmlElementAttribute("ornaments", typeof(ornaments))]
    [System.Xml.Serialization.XmlElementAttribute("other-notation", typeof(othernotation))]
    [System.Xml.Serialization.XmlElementAttribute("slide", typeof(slide))]
    [System.Xml.Serialization.XmlElementAttribute("slur", typeof(slur))]
    [System.Xml.Serialization.XmlElementAttribute("technical", typeof(technical))]
    [System.Xml.Serialization.XmlElementAttribute("tied", typeof(tied))]
    [System.Xml.Serialization.XmlElementAttribute("tuplet", typeof(tuplet))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-object")]
    public YesNo printobject {
        get {
            return this.printobjectField;
        }
        set {
            this.printobjectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printobjectSpecified {
        get {
            return this.printobjectFieldSpecified;
        }
        set {
            this.printobjectFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class beam {
    
    private string numberField;
    
    private YesNo repeaterField;
    
    private bool repeaterFieldSpecified;
    
    private fan fanField;
    
    private bool fanFieldSpecified;
    
    private string colorField;
    
    private beamvalue valueField;
    
    public beam() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo repeater {
        get {
            return this.repeaterField;
        }
        set {
            this.repeaterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool repeaterSpecified {
        get {
            return this.repeaterFieldSpecified;
        }
        set {
            this.repeaterFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public fan fan {
        get {
            return this.fanField;
        }
        set {
            this.fanField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fanSpecified {
        get {
            return this.fanFieldSpecified;
        }
        set {
            this.fanFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public beamvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
public enum fan {
    
    /// <remarks/>
    accel,
    
    /// <remarks/>
    rit,
    
    /// <remarks/>
    none,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="notehead-text")]
public partial class noteheadtext {
    
    private object[] itemsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("accidental-text", typeof(AccidentalText))]
    [System.Xml.Serialization.XmlElementAttribute("display-text", typeof(FormattedText))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class notehead {
    
    private YesNo filledField;
    
    private bool filledFieldSpecified;
    
    private YesNo parenthesesField;
    
    private bool parenthesesFieldSpecified;
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string colorField;
    
    private noteheadvalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo filled {
        get {
            return this.filledField;
        }
        set {
            this.filledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool filledSpecified {
        get {
            return this.filledFieldSpecified;
        }
        set {
            this.filledFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo parentheses {
        get {
            return this.parenthesesField;
        }
        set {
            this.parenthesesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool parenthesesSpecified {
        get {
            return this.parenthesesFieldSpecified;
        }
        set {
            this.parenthesesFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public noteheadvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="notehead-value")]
public enum noteheadvalue {
    
    /// <remarks/>
    slash,
    
    /// <remarks/>
    triangle,
    
    /// <remarks/>
    diamond,
    
    /// <remarks/>
    square,
    
    /// <remarks/>
    cross,
    
    /// <remarks/>
    x,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("circle-x")]
    circlex,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("inverted triangle")]
    invertedtriangle,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("arrow down")]
    arrowdown,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("arrow up")]
    arrowup,
    
    /// <remarks/>
    slashed,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("back slashed")]
    backslashed,
    
    /// <remarks/>
    normal,
    
    /// <remarks/>
    cluster,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("circle dot")]
    circledot,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("left triangle")]
    lefttriangle,
    
    /// <remarks/>
    rectangle,
    
    /// <remarks/>
    none,
    
    /// <remarks/>
    @do,
    
    /// <remarks/>
    re,
    
    /// <remarks/>
    mi,
    
    /// <remarks/>
    fa,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("fa up")]
    faup,
    
    /// <remarks/>
    so,
    
    /// <remarks/>
    la,
    
    /// <remarks/>
    ti,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class stem {
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private string colorField;
    
    private stemvalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public stemvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="stem-value")]
public enum stemvalue {
    
    /// <remarks/>
    down,
    
    /// <remarks/>
    up,
    
    /// <remarks/>
    @double,
    
    /// <remarks/>
    none,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class accidental {
    
    private YesNo cautionaryField;
    
    private bool cautionaryFieldSpecified;
    
    private YesNo editorialField;
    
    private bool editorialFieldSpecified;
    
    private YesNo parenthesesField;
    
    private bool parenthesesFieldSpecified;
    
    private YesNo bracketField;
    
    private bool bracketFieldSpecified;
    
    private SymbolSize sizeField;
    
    private bool sizeFieldSpecified;
    
    private AccidentalValue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo cautionary {
        get {
            return this.cautionaryField;
        }
        set {
            this.cautionaryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool cautionarySpecified {
        get {
            return this.cautionaryFieldSpecified;
        }
        set {
            this.cautionaryFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo editorial {
        get {
            return this.editorialField;
        }
        set {
            this.editorialField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool editorialSpecified {
        get {
            return this.editorialFieldSpecified;
        }
        set {
            this.editorialFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo parentheses {
        get {
            return this.parenthesesField;
        }
        set {
            this.parenthesesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool parenthesesSpecified {
        get {
            return this.parenthesesFieldSpecified;
        }
        set {
            this.parenthesesFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo bracket {
        get {
            return this.bracketField;
        }
        set {
            this.bracketField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bracketSpecified {
        get {
            return this.bracketFieldSpecified;
        }
        set {
            this.bracketFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public SymbolSize size {
        get {
            return this.sizeField;
        }
        set {
            this.sizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sizeSpecified {
        get {
            return this.sizeFieldSpecified;
        }
        set {
            this.sizeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public AccidentalValue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="note-type")]
public partial class notetype {
    
    private SymbolSize sizeField;
    
    private bool sizeFieldSpecified;
    
    private NoteTypeValue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public SymbolSize size {
        get {
            return this.sizeField;
        }
        set {
            this.sizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sizeSpecified {
        get {
            return this.sizeFieldSpecified;
        }
        set {
            this.sizeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public NoteTypeValue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class instrument {
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class tie {
    
    private StartStop typeField;
    
    private string timeonlyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("time-only", DataType="token")]
    public string timeonly {
        get {
            return this.timeonlyField;
        }
        set {
            this.timeonlyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class rest {
    
    private Step displaystepField;
    
    private string displayoctaveField;
    
    private YesNo measureField;
    
    private bool measureFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("display-step")]
    public Step displaystep {
        get {
            return this.displaystepField;
        }
        set {
            this.displaystepField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("display-octave", DataType="integer")]
    public string displayoctave {
        get {
            return this.displayoctaveField;
        }
        set {
            this.displayoctaveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo measure {
        get {
            return this.measureField;
        }
        set {
            this.measureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool measureSpecified {
        get {
            return this.measureFieldSpecified;
        }
        set {
            this.measureFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class unpitched {
    
    private Step displaystepField;
    
    private string displayoctaveField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("display-step")]
    public Step displaystep {
        get {
            return this.displaystepField;
        }
        set {
            this.displaystepField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("display-octave", DataType="integer")]
    public string displayoctave {
        get {
            return this.displayoctaveField;
        }
        set {
            this.displayoctaveField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class pitch {
    
    private Step stepField;
    
    private decimal alterField;
    
    private bool alterFieldSpecified;
    
    private string octaveField;
    
    /// <remarks/>
    public Step step {
        get {
            return this.stepField;
        }
        set {
            this.stepField = value;
        }
    }
    
    /// <remarks/>
    public decimal alter {
        get {
            return this.alterField;
        }
        set {
            this.alterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool alterSpecified {
        get {
            return this.alterFieldSpecified;
        }
        set {
            this.alterFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string octave {
        get {
            return this.octaveField;
        }
        set {
            this.octaveField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class grace {
    
    private decimal stealtimepreviousField;
    
    private bool stealtimepreviousFieldSpecified;
    
    private decimal stealtimefollowingField;
    
    private bool stealtimefollowingFieldSpecified;
    
    private decimal maketimeField;
    
    private bool maketimeFieldSpecified;
    
    private YesNo slashField;
    
    private bool slashFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("steal-time-previous")]
    public decimal stealtimeprevious {
        get {
            return this.stealtimepreviousField;
        }
        set {
            this.stealtimepreviousField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool stealtimepreviousSpecified {
        get {
            return this.stealtimepreviousFieldSpecified;
        }
        set {
            this.stealtimepreviousFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("steal-time-following")]
    public decimal stealtimefollowing {
        get {
            return this.stealtimefollowingField;
        }
        set {
            this.stealtimefollowingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool stealtimefollowingSpecified {
        get {
            return this.stealtimefollowingFieldSpecified;
        }
        set {
            this.stealtimefollowingFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("make-time")]
    public decimal maketime {
        get {
            return this.maketimeField;
        }
        set {
            this.maketimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maketimeSpecified {
        get {
            return this.maketimeFieldSpecified;
        }
        set {
            this.maketimeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo slash {
        get {
            return this.slashField;
        }
        set {
            this.slashField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool slashSpecified {
        get {
            return this.slashFieldSpecified;
        }
        set {
            this.slashFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class note {
    
    private object[] itemsField;
    
    private ItemsChoiceType1[] itemsElementNameField;
    
    private instrument instrumentField;
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    private string voiceField;
    
    private notetype typeField;
    
    private emptyplacement[] dotField;
    
    private accidental accidentalField;
    
    private timemodification timemodificationField;
    
    private stem stemField;
    
    private notehead noteheadField;
    
    private noteheadtext noteheadtextField;
    
    private string staffField;
    
    private beam[] beamField;
    
    private notations[] notationsField;
    
    private lyric[] lyricField;
    
    private play playField;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    private string colorField;
    
    private YesNo printdotField;
    
    private bool printdotFieldSpecified;
    
    private YesNo printlyricField;
    
    private bool printlyricFieldSpecified;
    
    private decimal dynamicsField;
    
    private bool dynamicsFieldSpecified;
    
    private decimal enddynamicsField;
    
    private bool enddynamicsFieldSpecified;
    
    private decimal attackField;
    
    private bool attackFieldSpecified;
    
    private decimal releaseField;
    
    private bool releaseFieldSpecified;
    
    private string timeonlyField;
    
    private YesNo pizzicatoField;
    
    private bool pizzicatoFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("chord", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("cue", typeof(Empty))]
    [System.Xml.Serialization.XmlElementAttribute("duration", typeof(decimal))]
    [System.Xml.Serialization.XmlElementAttribute("grace", typeof(grace))]
    [System.Xml.Serialization.XmlElementAttribute("pitch", typeof(pitch))]
    [System.Xml.Serialization.XmlElementAttribute("rest", typeof(rest))]
    [System.Xml.Serialization.XmlElementAttribute("tie", typeof(tie))]
    [System.Xml.Serialization.XmlElementAttribute("unpitched", typeof(unpitched))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType1[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
    
    /// <remarks/>
    public instrument instrument {
        get {
            return this.instrumentField;
        }
        set {
            this.instrumentField = value;
        }
    }
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    public string voice {
        get {
            return this.voiceField;
        }
        set {
            this.voiceField = value;
        }
    }
    
    /// <remarks/>
    public notetype type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dot")]
    public emptyplacement[] dot {
        get {
            return this.dotField;
        }
        set {
            this.dotField = value;
        }
    }
    
    /// <remarks/>
    public accidental accidental {
        get {
            return this.accidentalField;
        }
        set {
            this.accidentalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("time-modification")]
    public timemodification timemodification {
        get {
            return this.timemodificationField;
        }
        set {
            this.timemodificationField = value;
        }
    }
    
    /// <remarks/>
    public stem stem {
        get {
            return this.stemField;
        }
        set {
            this.stemField = value;
        }
    }
    
    /// <remarks/>
    public notehead notehead {
        get {
            return this.noteheadField;
        }
        set {
            this.noteheadField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("notehead-text")]
    public noteheadtext noteheadtext {
        get {
            return this.noteheadtextField;
        }
        set {
            this.noteheadtextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string staff {
        get {
            return this.staffField;
        }
        set {
            this.staffField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("beam")]
    public beam[] beam {
        get {
            return this.beamField;
        }
        set {
            this.beamField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("notations")]
    public notations[] notations {
        get {
            return this.notationsField;
        }
        set {
            this.notationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lyric")]
    public lyric[] lyric {
        get {
            return this.lyricField;
        }
        set {
            this.lyricField = value;
        }
    }
    
    /// <remarks/>
    public play play {
        get {
            return this.playField;
        }
        set {
            this.playField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-dot")]
    public YesNo printdot {
        get {
            return this.printdotField;
        }
        set {
            this.printdotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printdotSpecified {
        get {
            return this.printdotFieldSpecified;
        }
        set {
            this.printdotFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("print-lyric")]
    public YesNo printlyric {
        get {
            return this.printlyricField;
        }
        set {
            this.printlyricField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool printlyricSpecified {
        get {
            return this.printlyricFieldSpecified;
        }
        set {
            this.printlyricFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal dynamics {
        get {
            return this.dynamicsField;
        }
        set {
            this.dynamicsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dynamicsSpecified {
        get {
            return this.dynamicsFieldSpecified;
        }
        set {
            this.dynamicsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("end-dynamics")]
    public decimal enddynamics {
        get {
            return this.enddynamicsField;
        }
        set {
            this.enddynamicsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enddynamicsSpecified {
        get {
            return this.enddynamicsFieldSpecified;
        }
        set {
            this.enddynamicsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool attackSpecified {
        get {
            return this.attackFieldSpecified;
        }
        set {
            this.attackFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool releaseSpecified {
        get {
            return this.releaseFieldSpecified;
        }
        set {
            this.releaseFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("time-only", DataType="token")]
    public string timeonly {
        get {
            return this.timeonlyField;
        }
        set {
            this.timeonlyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo pizzicato {
        get {
            return this.pizzicatoField;
        }
        set {
            this.pizzicatoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool pizzicatoSpecified {
        get {
            return this.pizzicatoFieldSpecified;
        }
        set {
            this.pizzicatoFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType1 {
    
    /// <remarks/>
    chord,
    
    /// <remarks/>
    cue,
    
    /// <remarks/>
    duration,
    
    /// <remarks/>
    grace,
    
    /// <remarks/>
    pitch,
    
    /// <remarks/>
    rest,
    
    /// <remarks/>
    tie,
    
    /// <remarks/>
    unpitched,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="virtual-instrument")]
public partial class virtualinstrument {
    
    private string virtuallibraryField;
    
    private string virtualnameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("virtual-library")]
    public string virtuallibrary {
        get {
            return this.virtuallibraryField;
        }
        set {
            this.virtuallibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("virtual-name")]
    public string virtualname {
        get {
            return this.virtualnameField;
        }
        set {
            this.virtualnameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="score-instrument")]
public partial class scoreinstrument {
    
    private string instrumentnameField;
    
    private string instrumentabbreviationField;
    
    private string instrumentsoundField;
    
    private object itemField;
    
    private virtualinstrument virtualinstrumentField;
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("instrument-name")]
    public string instrumentname {
        get {
            return this.instrumentnameField;
        }
        set {
            this.instrumentnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("instrument-abbreviation")]
    public string instrumentabbreviation {
        get {
            return this.instrumentabbreviationField;
        }
        set {
            this.instrumentabbreviationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("instrument-sound")]
    public string instrumentsound {
        get {
            return this.instrumentsoundField;
        }
        set {
            this.instrumentsoundField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ensemble", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("solo", typeof(Empty))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("virtual-instrument")]
    public virtualinstrument virtualinstrument {
        get {
            return this.virtualinstrumentField;
        }
        set {
            this.virtualinstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="part-name")]
public partial class partname {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="score-part")]
public partial class scorepart {
    
    private identification identificationField;
    
    private partname partnameField;
    
    private NameDisplay partnamedisplayField;
    
    private partname partabbreviationField;
    
    private NameDisplay partabbreviationdisplayField;
    
    private string[] groupField;
    
    private scoreinstrument[] scoreinstrumentField;
    
    private mididevice[] midideviceField;
    
    private midiinstrument[] midiinstrumentField;
    
    private string idField;
    
    /// <remarks/>
    public identification identification {
        get {
            return this.identificationField;
        }
        set {
            this.identificationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-name")]
    public partname partname {
        get {
            return this.partnameField;
        }
        set {
            this.partnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-name-display")]
    public NameDisplay partnamedisplay {
        get {
            return this.partnamedisplayField;
        }
        set {
            this.partnamedisplayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-abbreviation")]
    public partname partabbreviation {
        get {
            return this.partabbreviationField;
        }
        set {
            this.partabbreviationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-abbreviation-display")]
    public NameDisplay partabbreviationdisplay {
        get {
            return this.partabbreviationdisplayField;
        }
        set {
            this.partabbreviationdisplayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group")]
    public string[] group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("score-instrument")]
    public scoreinstrument[] scoreinstrument {
        get {
            return this.scoreinstrumentField;
        }
        set {
            this.scoreinstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-device")]
    public mididevice[] mididevice {
        get {
            return this.midideviceField;
        }
        set {
            this.midideviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("midi-instrument")]
    public midiinstrument[] midiinstrument {
        get {
            return this.midiinstrumentField;
        }
        set {
            this.midiinstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class identification {
    
    private typedtext[] creatorField;
    
    private typedtext[] rightsField;
    
    private encoding encodingField;
    
    private string sourceField;
    
    private typedtext[] relationField;
    
    private miscellaneousfield[] miscellaneousField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("creator")]
    public typedtext[] creator {
        get {
            return this.creatorField;
        }
        set {
            this.creatorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("rights")]
    public typedtext[] rights {
        get {
            return this.rightsField;
        }
        set {
            this.rightsField = value;
        }
    }
    
    /// <remarks/>
    public encoding encoding {
        get {
            return this.encodingField;
        }
        set {
            this.encodingField = value;
        }
    }
    
    /// <remarks/>
    public string source {
        get {
            return this.sourceField;
        }
        set {
            this.sourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("relation")]
    public typedtext[] relation {
        get {
            return this.relationField;
        }
        set {
            this.relationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public miscellaneousfield[] miscellaneous {
        get {
            return this.miscellaneousField;
        }
        set {
            this.miscellaneousField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="typed-text")]
public partial class typedtext {
    
    private string typeField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class encoding {
    
    private object[] itemsField;
    
    private ItemsChoiceType[] itemsElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("encoder", typeof(typedtext))]
    [System.Xml.Serialization.XmlElementAttribute("encoding-date", typeof(System.DateTime), DataType="date")]
    [System.Xml.Serialization.XmlElementAttribute("encoding-description", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("software", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("supports", typeof(supports))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class supports {
    
    private YesNo typeField;
    
    private string elementField;
    
    private string attributeField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public string element {
        get {
            return this.elementField;
        }
        set {
            this.elementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public string attribute {
        get {
            return this.attributeField;
        }
        set {
            this.attributeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType {
    
    /// <remarks/>
    encoder,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("encoding-date")]
    encodingdate,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("encoding-description")]
    encodingdescription,
    
    /// <remarks/>
    software,
    
    /// <remarks/>
    supports,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="miscellaneous-field")]
public partial class miscellaneousfield {
    
    private string nameField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="group-barline")]
public partial class groupbarline {
    
    private string colorField;
    
    private groupbarlinevalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public groupbarlinevalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="group-barline-value")]
public enum groupbarlinevalue {
    
    /// <remarks/>
    yes,
    
    /// <remarks/>
    no,
    
    /// <remarks/>
    Mensurstrich,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="group-symbol")]
public partial class groupsymbol {
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    private string colorField;
    
    private groupsymbolvalue valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public groupsymbolvalue Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="group-name")]
public partial class groupname {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="part-group")]
public partial class partgroup {
    
    private groupname groupnameField;
    
    private NameDisplay groupnamedisplayField;
    
    private groupname groupabbreviationField;
    
    private NameDisplay groupabbreviationdisplayField;
    
    private groupsymbol groupsymbolField;
    
    private groupbarline groupbarlineField;
    
    private Empty grouptimeField;
    
    private FormattedText footnoteField;
    
    private Level levelField;
    
    private StartStop typeField;
    
    private string numberField;
    
    public partgroup() {
        this.numberField = "1";
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group-name")]
    public groupname groupname {
        get {
            return this.groupnameField;
        }
        set {
            this.groupnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group-name-display")]
    public NameDisplay groupnamedisplay {
        get {
            return this.groupnamedisplayField;
        }
        set {
            this.groupnamedisplayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group-abbreviation")]
    public groupname groupabbreviation {
        get {
            return this.groupabbreviationField;
        }
        set {
            this.groupabbreviationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group-abbreviation-display")]
    public NameDisplay groupabbreviationdisplay {
        get {
            return this.groupabbreviationdisplayField;
        }
        set {
            this.groupabbreviationdisplayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group-symbol")]
    public groupsymbol groupsymbol {
        get {
            return this.groupsymbolField;
        }
        set {
            this.groupsymbolField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group-barline")]
    public groupbarline groupbarline {
        get {
            return this.groupbarlineField;
        }
        set {
            this.groupbarlineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("group-time")]
    public Empty grouptime {
        get {
            return this.grouptimeField;
        }
        set {
            this.grouptimeField = value;
        }
    }
    
    /// <remarks/>
    public FormattedText footnote {
        get {
            return this.footnoteField;
        }
        set {
            this.footnoteField = value;
        }
    }
    
    /// <remarks/>
    public Level level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public StartStop type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    [System.ComponentModel.DefaultValueAttribute("1")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="part-list")]
public partial class partlist {
    
    private partgroup[] partgroupField;
    
    private scorepart scorepartField;
    
    private object[] itemsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-group", Order=0)]
    public partgroup[] partgroup {
        get {
            return this.partgroupField;
        }
        set {
            this.partgroupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("score-part", Order=1)]
    public scorepart scorepart {
        get {
            return this.scorepartField;
        }
        set {
            this.scorepartField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-group", typeof(partgroup), Order=2)]
    [System.Xml.Serialization.XmlElementAttribute("score-part", typeof(scorepart), Order=2)]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class bookmark {
    
    private string idField;
    
    private string nameField;
    
    private string elementField;
    
    private string positionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public string element {
        get {
            return this.elementField;
        }
        set {
            this.elementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string position {
        get {
            return this.positionField;
        }
        set {
            this.positionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class link {
    
    private string hrefField;
    
    private OpusType typeField;
    
    private bool typeFieldSpecified;
    
    private string roleField;
    
    private string titleField;
    
    private OpusShow showField;
    
    private OpusActuate actuateField;
    
    private string nameField;
    
    private string elementField;
    
    private string positionField;
    
    private decimal defaultxField;
    
    private bool defaultxFieldSpecified;
    
    private decimal defaultyField;
    
    private bool defaultyFieldSpecified;
    
    private decimal relativexField;
    
    private bool relativexFieldSpecified;
    
    private decimal relativeyField;
    
    private bool relativeyFieldSpecified;
    
    public link() {
        this.typeField = OpusType.simple;
        this.showField = OpusShow.replace;
        this.actuateField = OpusActuate.onRequest;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
    public string href {
        get {
            return this.hrefField;
        }
        set {
            this.hrefField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink")]
    public OpusType type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool typeSpecified {
        get {
            return this.typeFieldSpecified;
        }
        set {
            this.typeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink", DataType="token")]
    public string role {
        get {
            return this.roleField;
        }
        set {
            this.roleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink", DataType="token")]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink")]
    [System.ComponentModel.DefaultValueAttribute(OpusShow.replace)]
    public OpusShow show {
        get {
            return this.showField;
        }
        set {
            this.showField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink")]
    [System.ComponentModel.DefaultValueAttribute(OpusActuate.onRequest)]
    public OpusActuate actuate {
        get {
            return this.actuateField;
        }
        set {
            this.actuateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public string element {
        get {
            return this.elementField;
        }
        set {
            this.elementField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string position {
        get {
            return this.positionField;
        }
        set {
            this.positionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-x")]
    public decimal defaultx {
        get {
            return this.defaultxField;
        }
        set {
            this.defaultxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultxSpecified {
        get {
            return this.defaultxFieldSpecified;
        }
        set {
            this.defaultxFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("default-y")]
    public decimal defaulty {
        get {
            return this.defaultyField;
        }
        set {
            this.defaultyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultySpecified {
        get {
            return this.defaultyFieldSpecified;
        }
        set {
            this.defaultyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-x")]
    public decimal relativex {
        get {
            return this.relativexField;
        }
        set {
            this.relativexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativexSpecified {
        get {
            return this.relativexFieldSpecified;
        }
        set {
            this.relativexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("relative-y")]
    public decimal relativey {
        get {
            return this.relativeyField;
        }
        set {
            this.relativeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool relativeySpecified {
        get {
            return this.relativeyFieldSpecified;
        }
        set {
            this.relativeyFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class credit {
    
    private string[] credittypeField;
    
    private link[] linkField;
    
    private bookmark[] bookmarkField;
    
    private object[] itemsField;
    
    private string pageField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("credit-type", Order=0)]
    public string[] credittype {
        get {
            return this.credittypeField;
        }
        set {
            this.credittypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("link", Order=1)]
    public link[] link {
        get {
            return this.linkField;
        }
        set {
            this.linkField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("bookmark", Order=2)]
    public bookmark[] bookmark {
        get {
            return this.bookmarkField;
        }
        set {
            this.bookmarkField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("bookmark", typeof(bookmark), Order=3)]
    [System.Xml.Serialization.XmlElementAttribute("credit-image", typeof(image), Order=3)]
    [System.Xml.Serialization.XmlElementAttribute("credit-words", typeof(FormattedText), Order=3)]
    [System.Xml.Serialization.XmlElementAttribute("link", typeof(link), Order=3)]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string page {
        get {
            return this.pageField;
        }
        set {
            this.pageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="lyric-language")]
public partial class lyriclanguage {
    
    private string numberField;
    
    private string nameField;
    
    private string langField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/XML/1998/namespace")]
    public string lang {
        get {
            return this.langField;
        }
        set {
            this.langField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="lyric-font")]
public partial class lyricfont {
    
    private string numberField;
    
    private string nameField;
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="empty-font")]
public partial class emptyfont {
    
    private string fontfamilyField;
    
    private FontStyle _fontStyleField;
    
    private bool fontstyleFieldSpecified;
    
    private string fontsizeField;
    
    private FontWeight _fontWeightField;
    
    private bool fontweightFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-family", DataType="token")]
    public string fontfamily {
        get {
            return this.fontfamilyField;
        }
        set {
            this.fontfamilyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-style")]
    public FontStyle FontStyle {
        get {
            return this._fontStyleField;
        }
        set {
            this._fontStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontstyleSpecified {
        get {
            return this.fontstyleFieldSpecified;
        }
        set {
            this.fontstyleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-size")]
    public string fontsize {
        get {
            return this.fontsizeField;
        }
        set {
            this.fontsizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("font-weight")]
    public FontWeight FontWeight {
        get {
            return this._fontWeightField;
        }
        set {
            this._fontWeightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fontweightSpecified {
        get {
            return this.fontweightFieldSpecified;
        }
        set {
            this.fontweightFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="other-appearance")]
public partial class otherappearance {
    
    private string typeField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class distance {
    
    private string typeField;
    
    private decimal valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="note-size")]
public partial class notesize {
    
    private notesizetype typeField;
    
    private decimal valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public notesizetype type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="note-size-type")]
public enum notesizetype {
    
    /// <remarks/>
    cue,
    
    /// <remarks/>
    grace,
    
    /// <remarks/>
    large,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="line-width")]
public partial class linewidth {
    
    private string typeField;
    
    private decimal valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class appearance {
    
    private linewidth[] linewidthField;
    
    private notesize[] notesizeField;
    
    private distance[] distanceField;
    
    private otherappearance[] otherappearanceField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("line-width")]
    public linewidth[] linewidth {
        get {
            return this.linewidthField;
        }
        set {
            this.linewidthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("note-size")]
    public notesize[] notesize {
        get {
            return this.notesizeField;
        }
        set {
            this.notesizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("distance")]
    public distance[] distance {
        get {
            return this.distanceField;
        }
        set {
            this.distanceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("other-appearance")]
    public otherappearance[] otherappearance {
        get {
            return this.otherappearanceField;
        }
        set {
            this.otherappearanceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class scaling {
    
    private decimal millimetersField;
    
    private decimal tenthsField;
    
    /// <remarks/>
    public decimal millimeters {
        get {
            return this.millimetersField;
        }
        set {
            this.millimetersField = value;
        }
    }
    
    /// <remarks/>
    public decimal tenths {
        get {
            return this.tenthsField;
        }
        set {
            this.tenthsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class defaults {
    
    private scaling scalingField;
    
    private PageLayout _pageLayoutField;
    
    private SystemLayout _systemLayoutField;
    
    private StaffLayout[] _staffLayoutField;
    
    private appearance appearanceField;
    
    private emptyfont musicfontField;
    
    private emptyfont wordfontField;
    
    private lyricfont[] lyricfontField;
    
    private lyriclanguage[] lyriclanguageField;
    
    /// <remarks/>
    public scaling scaling {
        get {
            return this.scalingField;
        }
        set {
            this.scalingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("page-layout")]
    public PageLayout PageLayout {
        get {
            return this._pageLayoutField;
        }
        set {
            this._pageLayoutField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("system-layout")]
    public SystemLayout SystemLayout {
        get {
            return this._systemLayoutField;
        }
        set {
            this._systemLayoutField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("staff-layout")]
    public StaffLayout[] StaffLayout {
        get {
            return this._staffLayoutField;
        }
        set {
            this._staffLayoutField = value;
        }
    }
    
    /// <remarks/>
    public appearance appearance {
        get {
            return this.appearanceField;
        }
        set {
            this.appearanceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("music-font")]
    public emptyfont musicfont {
        get {
            return this.musicfontField;
        }
        set {
            this.musicfontField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("word-font")]
    public emptyfont wordfont {
        get {
            return this.wordfontField;
        }
        set {
            this.wordfontField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lyric-font")]
    public lyricfont[] lyricfont {
        get {
            return this.lyricfontField;
        }
        set {
            this.lyricfontField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lyric-language")]
    public lyriclanguage[] lyriclanguage {
        get {
            return this.lyriclanguageField;
        }
        set {
            this.lyriclanguageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class scorepartwisePart {
    
    private scorepartwisePartMeasure[] measureField;
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("measure")]
    public scorepartwisePartMeasure[] measure {
        get {
            return this.measureField;
        }
        set {
            this.measureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class scorepartwisePartMeasure {
    
    private object[] itemsField;
    
    private string numberField;
    
    private YesNo implicitField;
    
    private bool implicitFieldSpecified;
    
    private YesNo noncontrollingField;
    
    private bool noncontrollingFieldSpecified;
    
    private decimal widthField;
    
    private bool widthFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("attributes", typeof(attributes))]
    [System.Xml.Serialization.XmlElementAttribute("backup", typeof(backup))]
    [System.Xml.Serialization.XmlElementAttribute("barline", typeof(BarLine))]
    [System.Xml.Serialization.XmlElementAttribute("bookmark", typeof(bookmark))]
    [System.Xml.Serialization.XmlElementAttribute("direction", typeof(direction))]
    [System.Xml.Serialization.XmlElementAttribute("figured-bass", typeof(FiguredBass))]
    [System.Xml.Serialization.XmlElementAttribute("forward", typeof(forward))]
    [System.Xml.Serialization.XmlElementAttribute("grouping", typeof(Grouping))]
    [System.Xml.Serialization.XmlElementAttribute("harmony", typeof(Harmony))]
    [System.Xml.Serialization.XmlElementAttribute("link", typeof(link))]
    [System.Xml.Serialization.XmlElementAttribute("note", typeof(note))]
    [System.Xml.Serialization.XmlElementAttribute("print", typeof(Print))]
    [System.Xml.Serialization.XmlElementAttribute("sound", typeof(sound))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo @implicit {
        get {
            return this.implicitField;
        }
        set {
            this.implicitField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool implicitSpecified {
        get {
            return this.implicitFieldSpecified;
        }
        set {
            this.implicitFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("non-controlling")]
    public YesNo noncontrolling {
        get {
            return this.noncontrollingField;
        }
        set {
            this.noncontrollingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool noncontrollingSpecified {
        get {
            return this.noncontrollingFieldSpecified;
        }
        set {
            this.noncontrollingFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal width {
        get {
            return this.widthField;
        }
        set {
            this.widthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool widthSpecified {
        get {
            return this.widthFieldSpecified;
        }
        set {
            this.widthFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
[System.Xml.Serialization.XmlRootAttribute("score-timewise", Namespace="", IsNullable=false)]
public partial class ScoreTimewise {
    
    private Work workField;
    
    private string movementnumberField;
    
    private string movementtitleField;
    
    private identification identificationField;
    
    private defaults defaultsField;
    
    private credit[] creditField;
    
    private partlist partlistField;
    
    private scoretimewiseMeasure[] measureField;
    
    private string versionField;
    
    public ScoreTimewise() {
        this.versionField = "1.0";
    }
    
    /// <remarks/>
    public Work work {
        get {
            return this.workField;
        }
        set {
            this.workField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("movement-number")]
    public string movementnumber {
        get {
            return this.movementnumberField;
        }
        set {
            this.movementnumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("movement-title")]
    public string movementtitle {
        get {
            return this.movementtitleField;
        }
        set {
            this.movementtitleField = value;
        }
    }
    
    /// <remarks/>
    public identification identification {
        get {
            return this.identificationField;
        }
        set {
            this.identificationField = value;
        }
    }
    
    /// <remarks/>
    public defaults defaults {
        get {
            return this.defaultsField;
        }
        set {
            this.defaultsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("credit")]
    public credit[] credit {
        get {
            return this.creditField;
        }
        set {
            this.creditField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part-list")]
    public partlist partlist {
        get {
            return this.partlistField;
        }
        set {
            this.partlistField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("measure")]
    public scoretimewiseMeasure[] measure {
        get {
            return this.measureField;
        }
        set {
            this.measureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    [System.ComponentModel.DefaultValueAttribute("1.0")]
    public string version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class scoretimewiseMeasure {
    
    private scoretimewiseMeasurePart[] partField;
    
    private string numberField;
    
    private YesNo implicitField;
    
    private bool implicitFieldSpecified;
    
    private YesNo noncontrollingField;
    
    private bool noncontrollingFieldSpecified;
    
    private decimal widthField;
    
    private bool widthFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("part")]
    public scoretimewiseMeasurePart[] part {
        get {
            return this.partField;
        }
        set {
            this.partField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="token")]
    public string number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public YesNo @implicit {
        get {
            return this.implicitField;
        }
        set {
            this.implicitField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool implicitSpecified {
        get {
            return this.implicitFieldSpecified;
        }
        set {
            this.implicitFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("non-controlling")]
    public YesNo noncontrolling {
        get {
            return this.noncontrollingField;
        }
        set {
            this.noncontrollingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool noncontrollingSpecified {
        get {
            return this.noncontrollingFieldSpecified;
        }
        set {
            this.noncontrollingFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal width {
        get {
            return this.widthField;
        }
        set {
            this.widthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool widthSpecified {
        get {
            return this.widthFieldSpecified;
        }
        set {
            this.widthFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class scoretimewiseMeasurePart {
    
    private object[] itemsField;
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("attributes", typeof(attributes))]
    [System.Xml.Serialization.XmlElementAttribute("backup", typeof(backup))]
    [System.Xml.Serialization.XmlElementAttribute("barline", typeof(BarLine))]
    [System.Xml.Serialization.XmlElementAttribute("bookmark", typeof(bookmark))]
    [System.Xml.Serialization.XmlElementAttribute("direction", typeof(direction))]
    [System.Xml.Serialization.XmlElementAttribute("figured-bass", typeof(FiguredBass))]
    [System.Xml.Serialization.XmlElementAttribute("forward", typeof(forward))]
    [System.Xml.Serialization.XmlElementAttribute("grouping", typeof(Grouping))]
    [System.Xml.Serialization.XmlElementAttribute("harmony", typeof(Harmony))]
    [System.Xml.Serialization.XmlElementAttribute("link", typeof(link))]
    [System.Xml.Serialization.XmlElementAttribute("note", typeof(note))]
    [System.Xml.Serialization.XmlElementAttribute("print", typeof(Print))]
    [System.Xml.Serialization.XmlElementAttribute("sound", typeof(sound))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}
